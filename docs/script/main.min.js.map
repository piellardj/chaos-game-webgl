{"version":3,"file":"main.min.js","mappings":"6qCAAA,aACA,YAEA,YACA,WAEA,WACA,QAEA,YAEA,OAaA,kBAOI,mBACI,YAAM,EAAAA,KAAG,KAEHC,EAAW,IAAIC,aAAa,G,OAClC,EAAKC,WAAa,IAAI,UAAI,EAAAH,GAAIC,EAAU,EAAG,EAAAD,GAAGI,OAAO,GAErD,EAAKC,YAAc,CAAC,EAAG,GAEvBC,KAAKC,OAAOC,UAAUC,UAAUC,MAAK,SAACC,EAAYC,GAC9C,IAAMC,EAAcP,KAAKC,OAAOO,iBAChC,EAAKT,YAAY,IAAM,EAAIM,EAAK,EAAAI,WAAWC,MAAQH,EACnD,EAAKR,YAAY,IAAM,EAAIO,EAAK,EAAAG,WAAWC,SAG/C,EAAAD,WAAWE,mBAAmBP,MAAK,WAC/B,EAAKL,YAAc,CAAC,EAAG,MAG3B,EAAKa,wBAAwB,EAAAH,WAAWI,OAExC,EAAKC,QAAU,KACfC,EAAcC,YACV,CACIC,iBAAkB,cAClBC,eAAgB,cAChBC,SAAU,KAEd,SAACC,GACkB,OAAXA,IACA,EAAKN,QAAUM,M,EAiKnC,OArMwB,OA0Cb,YAAAC,gBAAP,WACQC,KAAKzB,aACLyB,KAAKzB,WAAWwB,kBAChBC,KAAKzB,WAAa,MAGlByB,KAAKR,UACLQ,KAAKR,QAAQO,kBACbC,KAAKR,QAAU,OAIvB,sBAAW,4BAAa,C,IAAxB,WACI,OAAuB,MAAhBQ,KAAKR,S,gCAGT,YAAAS,KAAP,SAAYC,EAAkBC,EAAkBC,GAC5C,GAAIJ,KAAKK,cAAe,CACpB,IAAMC,EAAaN,KAAKO,eAAeL,EAAUC,GACjDH,KAAKzB,WAAWiC,QAAQF,EAAWG,MAGnCT,KAAKR,QAAQkB,EAAW,QAAEC,IAAMX,KAAKzB,WAErCyB,KAAKR,QAAQoB,MACbZ,KAAKR,QAAQqB,iBAGb,IADA,IAAMC,EAAW,GAAK,EAAI,IAAMV,GACR,MAAAE,EAAWS,KAAX,eAAiB,CAApC,IAAMC,EAAS,KAChBhB,KAAKR,QAAQyB,EAAU,OAAEC,MAAQ,CAC7BF,EAAUG,MAAM,GAAKL,EACrBE,EAAUG,MAAM,GAAKL,EACrBE,EAAUG,MAAM,GAAKL,EACrB,GACJd,KAAKR,QAAQ4B,eACb,EAAAhD,GAAGiD,WAAW,EAAAjD,GAAGkD,OAAQN,EAAUO,KAAMP,EAAUQ,SAMvD,YAAAlC,wBAAR,SAAgCmC,GAe5B,IAfJ,IAEgCC,EADtBzC,EAAcP,KAAKC,OAAOO,iBAM1BK,EAAQ,IAAIjB,aAAa,EAAImD,GAE7BE,GAAU,EAAIC,KAAKC,GAAKJ,EACxBK,EAAgBF,KAAKC,GAAK,GAAMJ,EAAU,GAAK,EAAKE,EAAS,EAG7DI,EAAU,IAAOH,KAAKI,IAAIF,GAAiBF,KAAKI,IAAIF,EAAgBF,KAAKK,MAAMR,EAAU,GAAKE,IAE3FO,EAAI,EAAGA,EAAIT,IAAWS,EAAG,CAC9B,IAAMC,EAAQL,EAAgBI,EAAIP,EAG5BS,EAjBsC,GAApBV,EAgBP,CAACE,KAAKS,IAAIF,GAAQP,KAAKI,IAAIG,GAASJ,IAf7C,GAHhB,KAG0BtD,YAAY,KAAO,EAAAU,WAAWC,MAAQH,IACtDyC,EAAM,GAJhB,KAI0BjD,YAAY,IAAM,EAAAU,WAAWC,OAgB/CG,EAAM,EAAI2C,EAAI,GAAKE,EAAS,GAC5B7C,EAAM,EAAI2C,EAAI,GAAKE,EAAS,GAGhC,OAAO7C,GAGH,YAAAgB,eAAR,SAAuB+B,EAAWnC,GAC9B,IAAMsB,EAAU,EAAAtC,WAAWI,MAE3BgD,EAAWC,eACX,IA6BIC,EA7BEC,EAAaH,EAAWI,oBAExBpD,EAAsBS,KAAKV,wBAAwBmC,GAGnDmB,EAAM,CAAC,EAAIhB,KAAKiB,SAAW,EAAG,EAAIjB,KAAKiB,SAAW,GASlD5D,EAAcP,KAAKC,OAAOO,iBAC1B4D,EAAsC,KAAtB,EAAA3D,WAAW4D,SAAmBnB,KAAKC,GACnDmB,EAAmBpB,KAAKS,IAAIS,GAAiB7D,EAC7CgE,GAAoBrB,KAAKI,IAAIc,GAAiB7D,EAC9CiE,EAAmBtB,KAAKI,IAAIc,GAC5BK,EAAmBvB,KAAKS,IAAIS,GAY9BL,EADwB,IAAxB,EAAAtD,WAAW4D,SAVf,WACI,IAAMK,EAAOV,EAAWjB,GAClB1C,EAAKoB,GAAYZ,EAAM,EAAI6D,EAAO,GAAKR,EAAI,IAAM3D,EACjDD,EAAKmB,GAAYZ,EAAM,EAAI6D,EAAO,GAAKR,EAAI,IAGjD,OAFAA,EAAI,IAAO7D,EAAKiE,EAAmBhE,EAAKiE,EACxCL,EAAI,IAAM7D,EAAKmE,EAAmBlE,EAAKmE,EAChCC,GAnBX,WACI,IAAMA,EAAOV,EAAWjB,GAGxB,OAFAmB,EAAI,IAAMzC,GAAYZ,EAAM,EAAI6D,EAAO,GAAKR,EAAI,IAChDA,EAAI,IAAMzC,GAAYZ,EAAM,EAAI6D,EAAO,GAAKR,EAAI,IACzCQ,GAyBX,IAAK,IAAIlB,EAAI,EAAGA,EAAI,MAAOA,EACvBO,IAGJ,IACMY,EAAS,CACX5C,KAFS,IAAInC,aAAa,EAAIgE,GAG9BvB,KAAM,IAGV,GAAI,EAAA5B,WAAWmE,OAAQ,CACnB,IAAMC,EAAiB3B,KAAKK,MAAMK,EAAIb,GAEtC,IAASS,EAAI,EAAGA,EAAIT,IAAWS,EAC3BmB,EAAOtC,KAAKjC,KAAK,CACbqC,OAAO,aAAae,EAAIT,GACxBF,KAAMW,EAAIqB,EACV/B,KAAM,IAId,IAAK,IAAIgC,EAAK,EAAGA,EAAKlB,IAAKkB,EAAI,CAC3B,IAAMJ,EAAOX,IACb,GAAIY,EAAOtC,KAAKqC,GAAM5B,KAAO,EAAI+B,EAAgB,CAC7C,IAAME,EAAQ,GAAKJ,EAAOtC,KAAKqC,GAAM7B,KAAO8B,EAAOtC,KAAKqC,GAAM5B,MAC9D6B,EAAO5C,KAAKgD,EAAQ,GAAKb,EAAI,GAC7BS,EAAO5C,KAAKgD,EAAQ,GAAKb,EAAI,GAC7BS,EAAOtC,KAAKqC,GAAM5B,cAU1B,IANA6B,EAAOtC,KAAKjC,KAAK,CACbqC,MAAO,CAAC,EAAG,EAAG,GACdI,KAAM,EACNC,KAAMc,IAGDkB,EAAK,EAAGA,EAAKlB,IAAKkB,EAAI,CAC3Bf,IACA,IAAMiB,EAAO,EAAIF,EACjBH,EAAO5C,KAAKiD,EAAO,GAAKd,EAAI,GAC5BS,EAAO5C,KAAKiD,EAAO,GAAKd,EAAI,GAIpC,OAAOS,GAlMG,EAAAM,oBAAsB/B,KAAKgC,IAAI,EAAG,IAoMpD,EArMA,CAAwB,WAuMxB,UAAeC,G,kEC7Lf,UA9BA,SAAsBC,GAClB,IAAIC,EAAI,EACJC,EAAI,EACJC,EAAI,EAwBR,OAtBAH,EAAOA,EAAO,EAAK,GAET,GACNC,EAAI,EACJC,EAAIF,GACGA,EAAM,GACbC,EAAI,EAAID,EACRE,EAAI,GACGF,EAAM,GACbE,EAAI,EACJC,EAAIH,EAAM,GACHA,EAAM,GACbE,EAAI,EAAIF,EACRG,EAAI,GACGH,EAAM,GACbC,EAAID,EAAM,EACVG,EAAI,GACGH,EAAM,IACbC,EAAI,EACJE,EAAI,EAAIH,GAGL,CAACC,EAAGC,EAAGC,K,krBC/BlB,gBACA,SACA,YAGA,YACA,QAEA,OAyEA,UAvEA,SAAwBC,EAAY1C,GAChC,IAAM2C,EAASzF,KAAKC,OAAOyF,YACrBC,EAAW,EAAAlF,WAAWmF,OAAS,EAAAC,KAAKC,MAASC,EAAgBC,MAAQD,EAAgBE,SAErFC,EAAiBP,EAAQQ,yBAAyB,CAACrD,EAAMA,IAC/D,GAAIoD,EAAiB,IAAU,CAC3B,IAAME,EAAU,uEACqBF,EAAeG,iBADpC,mCAGhB,IAAKC,QAAQF,GACT,OAIR,SAASG,IAEL,IADA,IAAMC,EAAaxG,KAAKC,OAAOwG,UACZ,MAAAzG,KAAKC,OAAOC,UAAUwG,aAAtB,gBACfC,EADW,MACNH,EAAW,GAAIA,EAAW,IAkBvC,SAASI,IACLnB,EAAOoB,MAAMC,SAAW,GACxBrB,EAAOoB,MAAME,MAAQ,GACrBtB,EAAOoB,MAAMG,OAAS,GACtBhH,KAAKC,OAAOgH,YAAW,GACvBjH,KAAKC,OAAOiH,cAAc,IAC1BX,IAQJ,IA3BIvG,KAAKC,OAAOgH,YAAW,GAEvBxB,EAAOoB,MAAMC,SAAW,WACxBrB,EAAOoB,MAAME,MAAQjE,EAAO,KAC5B2C,EAAOoB,MAAMG,OAASlE,EAAO,KAC7B2C,EAAOsB,MAAQjE,EACf2C,EAAOuB,OAASlE,EAEhByD,IACAY,EAASC,aACT,UAASC,cAAc,EAAA3H,IAc3B,EAAAA,GAAG4H,MAAM,EAAA5H,GAAG6H,kBAEZ5B,EAAQ6B,QACD7B,EAAQ8B,oBACX9B,EAAQ+B,SAASlC,GAGrB,IAAMmC,EAAiB,iBACvB,GAAKlC,EAAemC,SAAU,CAC1B,IAAMC,EAAQpC,EAAemC,WAC5BE,OAAOC,UAAkBC,WAAWH,EAAMF,GAE3Cf,SAEAnB,EAAOwC,QAAO,SAACJ,GACX,IAAMK,EAAOC,SAASC,cAAc,KACpCF,EAAKG,SAAWV,EAChBO,EAAKI,KAAOC,IAAIC,gBAAgBX,GAChCK,EAAKO,QAEL7B,S,mECjEZ,UATA,c,mnBCFA,gBACA,QAGA,2B,+CAqCA,OArCkC,OAGvB,YAAAY,MAAP,WACIlG,KAAKoH,kBAAoB,GAGtB,YAAAhB,SAAP,SAAgBlC,GACZ,IAAMmD,EAAiBrH,KAAK4E,eAAiB5E,KAAKoH,kBAC5ClH,EAAW0B,KAAK0F,IAAI,UAAU3D,oBAAqB0D,GACzDnD,EAAKjE,KAAKC,EAAU,EAAAf,WAAWgB,SAAU,EAAAhB,WAAWiB,SAEpDJ,KAAKoH,mBAAqBlH,GAG9B,sBAAW,iCAAkB,C,IAA7B,WACI,OAAOF,KAAKoH,kBAAoBpH,KAAK4E,gB,gCAGzC,sBAAW,+BAAgB,C,IAA3B,WACI,OAAO5E,KAAKoH,mB,gCAGT,YAAAvC,yBAAP,SAAgCK,GAC5B,IAAMqC,EAAa,EAAApI,WAAWqI,kBAAkBtC,GAChD,OAAOuC,EAAoBC,iCAAiCH,IAGhD,EAAAG,iCAAhB,SAAiDH,GAC7C,IAAMI,EAAa,IAAO,EAAAxI,WAAWyF,eAAiB2C,EAAaA,EACnE,OAAO3F,KAAKgG,KAAKD,IAGrB,sBAAY,6BAAc,C,IAA1B,WACI,IAAMJ,EAAa,EAAApI,WAAWoI,WAC9B,OAAOE,EAAoBC,iCAAiCH,I,gCAEpE,EArCA,CAFA,UAEkC,SAuClC,UAAeE,G,onBC3Cf,gBACA,QAGA,2B,+CA8DA,OA9DkC,OAQvB,YAAAvB,MAAP,WACIlG,KAAKoH,kBAAoB,EACzBpH,KAAK6H,UAAY,EAAA1I,WAAW2I,aAC5B9H,KAAK+H,6BAA+BC,EAAoBC,6BAA6B,EAAA9I,WAAWoI,YAChGvH,KAAKkI,aAAe,GAAM,EAAA/I,WAAWoI,WAErC,IAEMY,GADgB,EAAAhJ,WAAWiJ,WAAa,EAAAjJ,WAAW2I,cADnC,IAGhBO,EAA4BF,EAAqBnI,KAAK+H,6BAE5D/H,KAAKsI,iBAAmBH,EACpBE,EAA4B,UAAU1E,sBACtC3D,KAAKsI,kBAAoB,UAAU3E,oBAAsB0E,IAI1D,YAAAjC,SAAP,SAAgBlC,GAGZ,IAFA,IAAMqE,EAA6B3G,KAAK0F,IAAItH,KAAK6H,UAAY7H,KAAKsI,iBAAkB,EAAAnJ,WAAWiJ,YAExFpI,KAAK6H,UAAY7H,KAAKkI,aAAeK,GACxCvI,KAAKwI,gBAAgBtE,EAAMlE,KAAKkI,cAGhClI,KAAK6H,UAAYU,GACjBvI,KAAKwI,gBAAgBtE,EAAMqE,EAA6BvI,KAAK6H,YAIrE,sBAAW,iCAAkB,C,IAA7B,WACI,OAAO7H,KAAK6H,UAAY,EAAA1I,WAAWiJ,Y,gCAGvC,sBAAW,+BAAgB,C,IAA3B,WACI,OAAOpI,KAAKoH,mB,gCAGT,YAAAvC,yBAAP,SAAgCK,GAC5B,IAAMqC,EAAa,EAAApI,WAAWqI,kBAAkBtC,GAC1CuD,EAAwBT,EAAoBC,6BAA6BV,GACzEmB,EAAgB,EAAAvJ,WAAWiJ,WAAa,EAAAjJ,WAAW2I,aACzD,OAAOlG,KAAKgG,KAAKa,EAAwBC,IAG9B,EAAAT,6BAAf,SAA4CV,GACxC,OAAO3F,KAAKgG,KAAK,IAAO,EAAAzI,WAAWyF,eAAiB2C,EAAaA,IAG7D,YAAAiB,gBAAR,SAAwBtE,EAAiByE,GACrC,IAAMzI,EAAW0B,KAAKgG,KAAKe,EAAc3I,KAAK+H,8BAC9C7D,EAAKjE,KAAKC,EAAUF,KAAK6H,UAAW,EAAA1I,WAAWiB,SAC/CJ,KAAKoH,mBAAqBlH,EAC1BF,KAAK6H,WAAac,GAE1B,EA9DA,CAFA,UAEkC,SAgElC,UAAeX,G,onBCnEf,YACA,YAGMpD,EAAiBhD,KAAKgC,IAAI,EAAG,IAEnC,2B,+CAoBA,OApBoC,OAEzB,YAAAsC,MAAP,aAGO,YAAAE,SAAP,SAAgBlC,GACZA,EAAKjE,KAAK2E,EAAgB,EAAAzF,WAAWgB,SAT7B,IAYZ,sBAAW,iCAAkB,C,IAA7B,WACI,OAAO,G,gCAGX,sBAAW,+BAAgB,C,IAA3B,WACI,OAAOyE,G,gCAGJ,YAAAC,yBAAP,SAAgCK,GAC5B,OAAON,GAEf,EApBA,CAAoC,WAsBpC,UAAegE,G,oMC7Bf,gBAU0B,EAAAC,KAVnB,UACP,eACA,YACA,YAEMC,EAAY,IAAI,UAML,EAAApE,MAAA,EALjB,IAAMqE,EAAe,IAAI,UAML,EAAApE,SAAA,EALpB,IAAMqE,EAAc,IAAI,UAML,EAAAC,QAAA,G,uGCbnB,OAEA,IAAI7K,EAA4B,KA+C5B,EAAAA,GAAAA,EADA,EAAA8K,OA3CJ,SAAgBC,GACZ,SAASC,EAAStE,GACdpG,KAAK2K,SAASC,gBAAgB,gBAAiBxE,GAGnD,IAAMX,EAASzF,KAAKC,OAAOyF,YAG3B,GADA,EAAAhG,GAAAA,EAAK+F,EAAOoF,WAAW,QAASJ,GACtB,MAAN/K,EAAY,CAEZ,GADA,EAAAA,GAAAA,EAAK+F,EAAOoF,WAAW,qBAAsBJ,GACnC,MAAN/K,EAEA,OADAgL,EAAS,2DACF,EAGXA,EAAS,qGASb,OALAhL,EAAGoL,QAAQpL,EAAGqL,WACdrL,EAAGoL,QAAQpL,EAAGsL,YACdtL,EAAGoL,QAAQpL,EAAGuL,OACdvL,EAAGwL,WAAW,EAAG,EAAG,EAAG,IAEhB,GAkBP,EAAA9D,WAdJ,SAAoB+D,QAAA,IAAAA,IAAAA,GAAA,GAChB,IAAMC,EAAmB,EAAUtD,OAAOuD,iBAAmB,EAEvD5F,EAAS/F,EAAG+F,OAEZsB,EAAgB7D,KAAKK,MAAMkC,EAAO6F,YAAcF,GAChDpE,EAAiB9D,KAAKK,MAAMkC,EAAO8F,aAAeH,GACpD3F,EAAOsB,QAAUA,GAAStB,EAAOuB,SAAWA,IAC5CvB,EAAOsB,MAAQA,EACftB,EAAOuB,OAASA,K,mEC1CxB,iBAGI,WAAYtH,GACR4B,KAAKkK,IAAM9L,EAQnB,OALW,YAAAA,GAAP,WACI,OAAO4B,KAAKkK,KAIpB,EAZA,GAcA,UAAeC,G,mvBCdf,aACA,YACA,WAkBMC,EAAgD,GAQtD,SAAS1K,EAAY2K,EAAqBC,GACtC,IAAIC,EAAiB,EACjBC,EAAgB,EAEpB,SAASC,EAAaC,GAClB,SAASC,EAAcC,GACnB,OAAOA,EAAOC,QAAQ,qBAAqB,SAACC,EAAOC,GAC/C,OAAIV,EAAMxK,SAASkL,GACRV,EAAMxK,SAASkL,GAEnBD,KASf,GALAP,IACKG,GACDF,IAGmB,IAAnBD,EAAsB,CACtB,IAAIzK,EAAS,KAEb,GAAsB,IAAlB0K,EAAqB,CACrB,IAAMQ,EAAOC,EAAcC,UAAUb,EAAMzK,gBACrCuL,EAAOF,EAAcC,UAAUb,EAAM1K,kBAErCyL,EAAgBT,EAAcK,GAC9BK,EAAgBV,EAAcQ,GAEpCrL,EAAS,IAAI,UAAO,EAAA1B,GAAIgN,EAAeC,GAG3Cf,EAASxK,IAIjBmL,EAAcK,WAAWjB,EAAMzK,eAAgB6K,GAC/CQ,EAAcK,WAAWjB,EAAM1K,iBAAkB8K,GAmDjD,EAAAc,UA9FJ,SAAmBR,GACf,OAAOX,EAAcW,GAAMjL,QA4F3B,EAAAJ,YAAAA,EAGA,EAAA8L,eAlDJ,SAAwBT,EAAcV,EAAqBC,GACvD,SAASmB,EAAsBC,GAC3B,IAA6B,UAAAA,EAAOC,UAAP,gBACzBC,EADqB,OACLF,EAAOG,OAAQH,EAAO5L,QAG1C4L,EAAOC,UAAY,GAGvB,QAAmC,IAAxBvB,EAAcW,GAAuB,CAC5CX,EAAcW,GAAQ,CAClBY,UAAW,CAACrB,GACZuB,QAAQ,EACRxB,MAAK,EACLyB,SAAS,EACThM,OAAQ,MAEZ,IAAM,EAASsK,EAAcW,GAE7BrL,EAAY2K,GAAO,SAAC0B,GAChB,EAAOD,SAAU,EACjB,EAAOD,OAAyB,OAAhBE,EAChB,EAAOjM,OAASiM,EAEhBN,EAAsB,UAEvB,CACH,IAAMC,EAAStB,EAAcW,IAEN,IAAnBW,EAAOI,QACPJ,EAAOC,UAAU7M,KAAKwL,GAEtBmB,EAAsBC,KAmB9B,EAAAM,aAdJ,SAAsBjB,GACdX,EAAcW,KACVX,EAAcW,GAAMjL,QACpBsK,EAAcW,GAAMjL,OAAOC,yBAExBqK,EAAcW,M,kGCrG7B,IAAMkB,EAAiD,GAgEnD,EAAAX,WA7DJ,SAAoBY,EAAkB5B,GAClC,SAASmB,EAAsBC,GAC3B,IAA6B,UAAAA,EAAOC,UAAP,gBACzBC,EADqB,OACLF,EAAOG,QAG3BH,EAAOC,UAAY,GAGvB,QAAuC,IAA5BM,EAAcC,GAA2B,CAChDD,EAAcC,GAAY,CACtBP,UAAW,CAACrB,GACZuB,QAAQ,EACRC,SAAS,EACTK,KAAM,MAEV,IAAM,EAASF,EAAcC,GAEvB,EAAM,IAAIE,eAChB,EAAIC,KAAK,MAAO,aAAeH,GAAU,GACzC,EAAII,OAAS,WACc,IAAnB,EAAIC,aACJ,EAAOT,SAAU,EAEE,MAAf,EAAIU,QACJ,EAAOL,KAAO,EAAIM,aAClB,EAAOZ,QAAS,IAEhBa,QAAQC,MAAM,gBAAkBT,EAAW,oBAAsB,EAAIU,YACrE,EAAOf,QAAS,GAGpBJ,EAAsB,KAG9B,EAAIoB,QAAU,WACVH,QAAQC,MAAM,gBAAkBT,EAAW,oBAAsB,EAAIU,YACrE,EAAOd,SAAU,EACjB,EAAOD,QAAS,EAChBJ,EAAsB,IAG1B,EAAIqB,KAAK,UACN,CACH,IAAMpB,EAASO,EAAcC,IAEN,IAAnBR,EAAOI,QACPJ,EAAOC,UAAU7M,KAAKwL,IAEtBoB,EAAOC,UAAY,CAACrB,GACpBmB,EAAsBC,MAU9B,EAAAR,UALJ,SAAmBgB,GACf,OAAOD,EAAcC,GAAUC,O,onBCpEnC,gBAGA,SAASY,EAAe3O,EAA2B4O,EAAgC9L,GAC/E+L,MAAM,uBAyFV,IAAMC,EAAQ,CACV,MAAQ,CAAEC,IAAK,aAAcC,OA9EjC,SAA4BhP,EAA2B4O,EAAgC9L,GACnF9C,EAAGiP,WAAWL,EAAU9L,KA8ExB,MAAQ,CAAEiM,IAAK,aAAcC,OA3EjC,SAA4BhP,EAA2B4O,EAAgC9L,GACnF9C,EAAGkP,WAAWN,EAAU9L,KA2ExB,MAAQ,CAAEiM,IAAK,aAAcC,OAxEjC,SAA4BhP,EAA2B4O,EAAgC9L,GACnF9C,EAAGmP,WAAWP,EAAU9L,KAwExB,MAAQ,CAAEiM,IAAK,WAAYC,OA5D/B,SAA0BhP,EAA2B4O,EAAgC9L,GACjF9C,EAAGoP,WAAWR,EAAU9L,KA4DxB,MAAQ,CAAEiM,IAAK,WAAYC,OAzD/B,SAA0BhP,EAA2B4O,EAAgC9L,GACjF9C,EAAGqP,WAAWT,EAAU9L,KAyDxB,MAAQ,CAAEiM,IAAK,WAAYC,OAtD/B,SAA0BhP,EAA2B4O,EAAgC9L,GACjF9C,EAAGsP,WAAWV,EAAU9L,KAsDxB,MAAQ,CAAEiM,IAAK,OAAQC,OAnD3B,SAAyBhP,EAA2B4O,EAAgC9L,GAChF9C,EAAGuP,UAAUX,GAAW9L,KAmDxB,MAAQ,CAAEiM,IAAK,YAAaC,OAhDhC,SAA2BhP,EAA2B4O,EAAgC9L,GAClF9C,EAAGoP,WAAWR,EAAU9L,KAgDxB,MAAQ,CAAEiM,IAAK,YAAaC,OA7ChC,SAA2BhP,EAA2B4O,EAAgC9L,GAClF9C,EAAGqP,WAAWT,EAAU9L,KA6CxB,MAAQ,CAAEiM,IAAK,YAAaC,OA1ChC,SAA2BhP,EAA2B4O,EAAgC9L,GAClF9C,EAAGsP,WAAWV,EAAU9L,KA0CxB,MAAQ,CAAEiM,IAAK,aAAcC,OAvCjC,SAA8BhP,EAA2B4O,EAAgC9L,GACrF9C,EAAGwP,iBAAiBZ,GAAU,EAAO9L,KAuCrC,MAAQ,CAAEiM,IAAK,aAAcC,OApCjC,SAA8BhP,EAA2B4O,EAAgC9L,GACrF9C,EAAGyP,iBAAiBb,GAAU,EAAO9L,KAoCrC,MAAQ,CAAEiM,IAAK,aAAcC,OAjCjC,SAA8BhP,EAA2B4O,EAAgC9L,GACrF9C,EAAG0P,iBAAiBd,GAAU,EAAO9L,KAiCrC,MAAQ,CAAEiM,IAAK,aAAcC,OA9BjC,SAAuBhP,EAA2B4O,EAAgCe,EAC3D7M,GACnB9C,EAAGuP,UAAUX,EAAUe,GACvB3P,EAAG4P,cAAc5P,EAAG,UAAY2P,IAChC3P,EAAG6P,YAAY7P,EAAG8P,WAAYhN,KA2B9B,MAAQ,CAAEiM,IAAK,eAAgBC,OAxBnC,SAAyBhP,EAA2B4O,EAAgCe,EAC3D7M,GACrB9C,EAAGuP,UAAUX,EAAUe,GACvB3P,EAAG4P,cAAc5P,EAAG,UAAY2P,IAChC3P,EAAG6P,YAAY7P,EAAG+P,iBAAkBjN,KAqBpC,KAAQ,CAAEiM,IAAK,OAAQC,OAAQL,GAC/B,KAAQ,CAAEI,IAAK,gBAAiBC,OAAQL,GACxC,KAAQ,CAAEI,IAAK,QAASC,OAAQL,GAChC,KAAQ,CAAEI,IAAK,iBAAkBC,OAAQL,GACzC,KAAQ,CAAEI,IAAK,MAAOC,OApF1B,SAAwBhP,EAA2B4O,EAAgC9L,GAC3EkN,MAAMC,QAAQnN,GACd9C,EAAGkQ,WAAWtB,EAAU9L,KAmF5B,KAAQ,CAAEiM,IAAK,eAAgBC,OAAQL,GACvC,KAAQ,CAAEI,IAAK,QAASC,OA3G5B,SAA0BhP,EAA2B4O,EAAgC9L,GAC7EkN,MAAMC,QAAQnN,GACd9C,EAAGmQ,WAAWvB,EAAU9L,GAExB9C,EAAGoQ,UAAUxB,EAAU9L,MAwH/B,cAQI,WAAY9C,EAA2BqQ,EAAsBC,GAA7D,WACI,SAASC,EAAaC,EAAchE,GAChC,IAAM9K,EAAS1B,EAAGuQ,aAAaC,GAK/B,OAJAxQ,EAAGyQ,aAAa/O,EAAQ8K,GACxBxM,EAAG0Q,cAAchP,GAEM1B,EAAG2Q,mBAAmBjP,EAAQ1B,EAAG4Q,gBAOjDlP,GALH4M,QAAQC,MAAMvO,EAAG6Q,iBAAiBnP,IAClC1B,EAAG4N,aAAalM,GACT,OAMf,cAAM1B,IAAG,MAEJ8Q,GAAK,KACV,EAAKC,OAAS,EACd,EAAKC,OAAS,EAEd,IAAMC,EAAeV,EAAavQ,EAAGkR,cAAeb,GAC9Cc,EAAiBZ,EAAavQ,EAAGoR,gBAAiBd,GAElDQ,EAAK9Q,EAAGqR,gB,OACdrR,EAAGsR,aAAaR,EAAIG,GACpBjR,EAAGsR,aAAaR,EAAIK,GACpBnR,EAAGuR,YAAYT,GAEK9Q,EAAGwR,oBAAoBV,EAAI9Q,EAAGyR,cAK9C,EAAKX,GAAKA,EAEV,EAAKY,kBALLpD,QAAQC,MAAMvO,EAAG2R,kBAAkBb,IACnC9Q,EAAG4R,cAAcd,I,EAgF7B,OAzH4B,OAiDjB,YAAAnP,gBAAP,WACI,YAAM3B,GAAE,WAAG4R,cAAchQ,KAAKkP,IAC9BlP,KAAKkP,GAAK,MAGP,YAAAtO,IAAP,WACI,YAAMxC,GAAE,WAAG6R,WAAWjQ,KAAKkP,KAGxB,YAAA9N,aAAP,sBACUhD,EAA4B,YAAMA,GAAE,WACtC8R,EAA4B,EAEhCC,OAAOC,KAAKpQ,KAAKiB,GAAGoP,SAAQ,SAACC,GACzB,IAAMC,EAAU,EAAKtP,EAAEqP,GACvB,GAAsB,OAAlBC,EAAQrP,MACR,GAAqB,QAAjBqP,EAAQ3B,MAAoC,QAAjB2B,EAAQ3B,KAAiB,CACpD,IAAMb,EAAiBmC,EACvBhD,EAAMqD,EAAQ3B,MAAMxB,OAAOhP,EAAImS,EAAQC,IAAKzC,EAAQwC,EAAQrP,OAC5DgP,SAEAhD,EAAMqD,EAAQ3B,MAAMxB,OAAOhP,EAAImS,EAAQC,IAAKD,EAAQrP,WAM7D,YAAAL,eAAP,sBACIsP,OAAOC,KAAKpQ,KAAKU,GAAG2P,SAAQ,SAACI,GACzB,IAAMC,EAAY,EAAKhQ,EAAE+P,GACH,OAAlBC,EAAU/P,KACV+P,EAAU/P,IAAIgQ,KAAKD,EAAUF,SAKlC,YAAAI,0BAAP,WACI5Q,KAAKoB,eACLpB,KAAKa,kBAGD,YAAAiP,cAAR,WACI,IAAM1R,EAAK,YAAMA,GAAE,WAEnB4B,KAAKmP,OAAS/Q,EAAGwR,oBAAoB5P,KAAKkP,GAAI9Q,EAAGyS,iBACjD7Q,KAAKiB,EAAI,GACT,IAAK,IAAIiB,EAAI,EAAGA,EAAIlC,KAAKmP,SAAUjN,EAAG,CAClC,IAAMqO,EAAUnS,EAAG0S,iBAAiB9Q,KAAKkP,GAAIhN,GACvC,EAAOqO,EAAQxF,KAErB/K,KAAKiB,EAAE,GAAQ,CACXuP,IAAKpS,EAAG2S,mBAAmB/Q,KAAKkP,GAAI,GACpC1N,KAAM+O,EAAQ/O,KACdoN,KAAM2B,EAAQ3B,KACd1N,MAAO,MAMf,IAFAlB,KAAKoP,OAAShR,EAAGwR,oBAAoB5P,KAAKkP,GAAI9Q,EAAG4S,mBACjDhR,KAAKU,EAAI,GACAwB,EAAI,EAAGA,EAAIlC,KAAKoP,SAAUlN,EAAG,CAClC,IAAMwO,EAAYtS,EAAG6S,gBAAgBjR,KAAKkP,GAAIhN,GACxC,EAAOwO,EAAU3F,KAEvB/K,KAAKU,EAAE,GAAQ,CACXC,IAAK,KACL6P,IAAKpS,EAAG8S,kBAAkBlR,KAAKkP,GAAI,GACnC1N,KAAMkP,EAAUlP,KAChBoN,KAAM8B,EAAU9B,QAIhC,EAzHA,CAA4B,WA2H5B,UAAeuC,G,mnBC/Pf,IAEKC,EAFL,aAEA,SAAKA,GACD,yBACA,uBAFJ,CAAKA,IAAAA,EAAK,KAKV,kBAoBI,WAAYhT,EAA2BiT,EAAY7P,EAAcoN,EAAc0C,QAAA,IAAAA,IAAAA,GAAA,GAA/E,MACI,YAAMlT,IAAG,K,OAET,EAAK8Q,GAAK9Q,EAAGmT,eACbnT,EAAGoT,WAAWpT,EAAGqT,aAAc,EAAKvC,IAChCoC,EACAlT,EAAGsT,WAAWtT,EAAGqT,aAAcJ,EAAOjT,EAAGuT,aAEzCvT,EAAGsT,WAAWtT,EAAGqT,aAAcJ,EAAOjT,EAAGwT,cAE7CxT,EAAGoT,WAAWpT,EAAGqT,aAAc,MAE/B,EAAKjQ,KAAOA,EACZ,EAAKoN,KAAOA,EACZ,EAAKiD,WAAY,EACjB,EAAKC,OAAS,EACd,EAAKC,OAAS,EACd,EAAKC,MAAQ,EAAgBZ,EAAMa,OAASb,EAAMc,Q,EA0B1D,OA/DkB,OACA,EAAAC,WAAd,SAAyB/T,EAA2BgU,EAAcC,EAAcC,EAAcC,GAQ1F,OAAO,IAAI5R,EAAIvC,EAAI,IAAIE,aAPV,CACT8T,EAAMC,EACNC,EAAMD,EACND,EAAMG,EACND,EAAMC,IAGiC,EAAGnU,EAAGI,OAAO,IA+BrD,YAAAuB,gBAAP,WACIC,KAAK5B,KAAKoU,aAAaxS,KAAKkP,IAC5BlP,KAAKkP,GAAK,MAGP,YAAAyB,KAAP,SAAY3D,GACR,IAAM5O,EAAK,YAAMA,GAAE,WACnBA,EAAGqU,wBAAwBzF,GAC3B5O,EAAGoT,WAAWpT,EAAGqT,aAAczR,KAAKkP,IACpC9Q,EAAGsU,oBAAoB1F,EAAUhN,KAAKwB,KAAMxB,KAAK4O,KAAM5O,KAAK6R,UAAW7R,KAAK8R,OAAQ9R,KAAK+R,SAGtF,YAAAvR,QAAP,SAAe6Q,GACX,IAAMjT,EAAK,YAAMA,GAAE,WAEnBA,EAAGoT,WAAWpT,EAAGqT,aAAczR,KAAKkP,IAChClP,KAAKgS,QAAUZ,EAAMa,OACrB7T,EAAGsT,WAAWtT,EAAGqT,aAAcJ,EAAOjT,EAAGuT,aAEzCvT,EAAGsT,WAAWtT,EAAGqT,aAAcJ,EAAOjT,EAAGwT,cAE7CxT,EAAGoT,WAAWpT,EAAGqT,aAAc,OAEvC,EA/DA,CAAkB,WAiElB,UAAe9Q,G,mECxEf,iBAUI,WAAYgS,EAAcC,EAAenN,EAAeC,GACpD1F,KAAK2S,KAAOA,EACZ3S,KAAK4S,MAAQA,EACb5S,KAAKyF,MAAQA,EACbzF,KAAK0F,OAASA,EAMtB,OAnBkB,EAAAK,cAAd,SAA4B3H,GACxBA,EAAGyU,SAAS,EAAG,EAAGzU,EAAG0U,mBAAoB1U,EAAG2U,sBAezC,YAAAC,IAAP,SAAW5U,GACPA,EAAGyU,SAAS7S,KAAK4S,MAAO5S,KAAK2S,KAAM3S,KAAKyF,MAAOzF,KAAK0F,SAE5D,EApBA,GAsBA,UAAeuN,G,krBCtBf,gBACA,SACA,YAEA,YACA,YACA,QAEA,YAEA,OAEA,WAgFapN,EAASqD,OANG,CACbgK,OAAO,EACPC,WAAW,EACXC,OAAO,EACPC,uBAAuB,MAM3B,EAAAjV,GAAGkV,OAAO,EAAAlV,GAAGuL,OACb,EAAAvL,GAAGmV,UAAU,EAAAnV,GAAGoV,IAAK,EAAApV,GAAGoV,MAlF5B9U,KAAKC,OAAOgH,YAAW,GAEvB,EAAAxG,WAAWiB,QAAU,GACrB,EAAAjB,WAAWmE,QAAS,EACpB,EAAAnE,WAAWsU,YAAc,GACzB,EAAAtU,WAAWuU,eAAiB,EAE5B,IAAIC,GAAoB,EACpBC,GAAe,EA8Ef,EAAAzU,WAAW0U,eAAe/U,MAAK,WAAM,OAAA6U,GAAoB,KAEzD,EAAAxU,WAAW2U,kBAAkBhV,MAAK,SAACiV,GAC/BH,GAAe,GACf,aAAe1P,EAAM6P,GACrBH,GAAe,EACfD,GAAoB,KAjF5B,IAEIK,EAwBAC,EA1BE/P,EAAO,IAAI,UAGjB,SAASgQ,EAAeC,GACpBH,EAAcG,EACdzV,KAAKC,OAAOyV,iBAAiB,eAAgBJ,EAAYjP,kBAE7DmP,EAAe,GAqBf,IAAIG,GAAY,EA6BhBC,uBA5BA,SAASC,IACAX,IACGD,IArBR9N,EAASC,aACT,UAASC,cAAc,EAAA3H,IAEnB,EAAAe,WAAWqV,QAAU,EAAAC,MAAMC,OAC3B,EAAAtW,GAAGwL,WAAW,EAAG,EAAG,EAAG,GACvB,EAAAxL,GAAGuW,cAAc,EAAAvW,GAAGwW,yBAEpB,EAAAxW,GAAGwL,WAAW,EAAG,EAAG,EAAG,GACvB,EAAAxL,GAAGuW,cAAc,EAAAvW,GAAGyW,WAGxB,EAAAzW,GAAG4H,MAAM,EAAA5H,GAAG6H,kBACZiO,EAAe,GACfP,GAAoB,GAUZM,EAAkB,EAAA9U,WAAWmF,OAAU,EAAAC,KAAKC,MAASC,EAAgBC,MAAQD,EAAgBE,UAC9EuB,SAGfxH,KAAKC,OAAOmW,eACZrQ,EAAgBwE,QAAQ7C,SAASlC,GACjCgQ,EAAezP,EAAgBwE,QAAQ8L,kBACvCpB,GAAoB,GACbzP,EAAK7D,gBACR4T,EAAe9N,qBACf8N,EAAe7N,SAASlC,GACxBgQ,EAAeD,EAAec,mBAG9BV,IACAA,GAAY,EACZ3V,KAAKC,OAAOgH,YAAW,MAKnC2O,sBAAsBC,MAgC9BS,I,qpBChHA,IAUKP,EAVL,YACA,YAKA,SAASQ,EAAMC,EAAWC,EAAgBC,GACtC,OAAOxT,KAAK0F,IAAI8N,EAAQxT,KAAKyT,IAAIF,EAAQD,IAH7C,OAMA,SAAKT,GACD,cACA,gBAFJ,CAAKA,IAAAA,EAAK,KAkaN,EAAAA,MAAAA,EA5ZJ,IAAMa,EACI,OADJA,EAEa,0BAFbA,EAGgB,6BAHhBA,EAIK,iBAJLA,EAKQ,oBALRA,EAMa,yBANbA,EAOW,uBAPXA,EAQQ,oBARRA,EAUY,yBAVZA,EAYS,qBAZTA,EAaO,mBAbPA,EAcK,QAdLA,EAeM,qBAYZ,SAASC,EAAcC,GACnB,IAAuB,UAAAA,EAAA,gBACnBC,EADe,QAKvB,IAYKlR,EAZCmR,EAMK,GANLA,EAOQ,GAPRA,EAQU,GARVA,EASS,IAGf,SAAKnR,GACD,gBACA,sBAFJ,CAAKA,IAAAA,EAAI,KA6WL,EAAAA,KAAAA,EAxWJ7F,KAAKiX,YAAYC,oBA/BH,sBA+B2C,WAErD,IADA,IAAMpU,GAAQ9C,KAAKmX,KAAKC,UAjCX,qBAiC4C,GAClC,MAAAJ,EAAA,gBACnBD,EADe,MACNjU,MAIjB9C,KAAKqX,OAAOC,YAzCD,mBAyC8B,WAAM,OAAAT,EAAcG,MAC7DhX,KAAKC,OAAOC,UAAUC,UAAUC,MAAK,WAAM,OAAAyW,EAAcG,MAEzD,IAAI9Q,EAAyB,EAC7B,SAASqR,IACL,IAAMC,EAAWC,GAAa/V,EAAU,IAClCgW,EAAgB9R,IAASC,EAAK8R,UAAcH,EAAWtR,EAC7DA,EAAiBsR,EAEbE,GACAE,IAIR,IAAI/O,EAAqB,EACzB,SAASgP,IACL,IAAMrR,EAAaxG,KAAKC,OAAOwG,UAC/BoC,EAAapI,EAAWqI,kBAAkBtC,GAI9C,+BAoIA,OAnII,sBAAkB,UAAK,C,IAAvB,WACI,OAAO9F,G,IAEX,SAAwBoX,GACpBpX,EAAQ6V,EAAMuB,EAAGC,EAAWC,GAC5BH,IACAhB,EAAcG,I,gCAGJ,EAAAlO,kBAAd,SAAgCtC,GAE5B,OADgBtD,KAAK0F,IAAIpC,EAAW,GAAIA,EAAW,IAClC9F,GAErB,sBAAkB,eAAU,C,IAA5B,WACI,OAAOmI,G,gCAGX,sBAAkB,mBAAc,C,IAAhC,WACI,OAAO3C,G,gCAGX,sBAAkB,cAAS,C,IAA3B,WACI,OAAOuR,G,IAEX,SAA4BjU,GACxBxD,KAAKiY,MAAMC,SAAStB,EAAqBpT,GACzCiU,EAAYzX,KAAKiY,MAAME,SAASvB,GAChCW,K,gCAGJ,sBAAkB,YAAO,C,IAAzB,WACI,OAAO7V,G,IAEX,SAA0B0W,GACtB1W,EAAU0W,EACVpY,KAAKiY,MAAMC,SAAStB,EAAmBlV,I,gCAG3C,sBAAkB,UAAK,C,IAAvB,WACI,OAAOoU,G,gCAGX,sBAAkB,WAAM,C,IAAxB,WACI,OAAOlR,G,IAEX,SAAyByT,GACrBzT,EAASyT,EACTrY,KAAKsY,SAASC,WAAW3B,EAAkByB,I,gCAG/C,sBAAkB,SAAI,C,IAAtB,WACI,OAAOzS,G,gCAEX,sBAAkB,wBAAmB,C,IAArC,WACI,OAAOoR,G,gCAGX,sBAAkB,gBAAW,C,IAA7B,SAA8BwB,GAC1BxY,KAAKyY,OAAOP,SAAStB,EAAyB,GAAK4B,GAC/C5S,IAASC,EAAKC,OACd4S,EAAiBF,I,gCAIzB,sBAAkB,mBAAc,C,IAAhC,SAAiCA,GAC7BxY,KAAKyY,OAAOP,SAAStB,EAA4B,GAAK4B,GAClD5S,IAASC,EAAK8R,UACdgB,EAAoBH,I,gCAI5B,sBAAkB,UAAK,C,IAAvB,WACI,OAAO3X,G,IAEX,SAAwB+X,GACpB/X,EAAQ+X,EACR5Y,KAAKiY,MAAMC,SAAStB,EAAiB/V,GACrCgW,EAAcG,I,gCAGlB,sBAAkB,aAAQ,C,IAA1B,WACI,OAAOvV,G,IAEX,SAA2B2W,GACvB3W,EAAW2W,EACXpY,KAAKiY,MAAMC,SAAStB,EAAoBwB,I,gCAG5C,sBAAkB,iBAAY,C,IAA9B,WACI,OAAOlV,KAAK0F,IAAIQ,EAAcM,I,IAElC,SAA+B0O,GAC3BhP,EAAegP,EACfpY,KAAKiY,MAAMC,SAAStB,EAAyBwB,I,gCAGjD,sBAAkB,eAAU,C,IAA5B,WACI,OAAOlV,KAAKyT,IAAIvN,EAAcM,I,IAElC,SAA6B0O,GACzB1O,EAAa0O,EACbpY,KAAKiY,MAAMC,SAAStB,EAAuBwB,I,gCAG/C,sBAAkB,aAAQ,C,IAA1B,WACI,OAAO/T,I,IAEX,SAA2BgB,GACvBhB,GAAWgB,EACXrF,KAAKiY,MAAMC,SAAStB,EAAoBvR,I,gCAG5C,sBAAkB,gBAAW,C,IAA7B,WACI,OAAOwT,I,IAEX,SAA8BxT,GAC1BwT,GAAcxT,EACdrF,KAAKyY,OAAOP,SAAStB,EAAwBvR,I,gCAGjD,sBAAkB,sBAAiB,C,IAAnC,WACI,OAAO2R,G,gCAGX,sBAAkB,mBAAc,C,IAAhC,WACI,OAAOA,G,gCAGX,sBAAkB,uBAAkB,C,IAApC,WACI,OAAOA,G,gCAEf,EApIA,GAwIA,SAASY,IACLf,EAAcG,GAoMd,EAAAvW,WAAAA,EAjMJ,IAAIC,EAAQ,EACNqX,EAAY,IACZC,EAAY,EAClBhY,KAAKC,OAAOC,UAAU4Y,WAAW1Y,MAAK,SAAC2Y,EAAeC,GAClD,IAAMC,EAAW1C,EAAM7V,GAAS,EAAI,GAAMqY,GAAQhB,EAAWC,GAEzDiB,IAAavY,IACbA,EAAQuY,EACRpB,IACAD,QAIR,IAAIH,EAAoBzX,KAAKiY,MAAME,SAASvB,GAC5C5W,KAAKiY,MAAMX,YAAYV,GAAqB,SAACpT,GACzCiU,EAAYjU,EACZ+T,OAGJ,IAOIzB,EAPApU,EAAkB1B,KAAKiY,MAAME,SAASvB,GAQ1C,SAASsC,EAASC,GACdrD,EAAQqD,EACRvB,IATJ5X,KAAKiY,MAAMX,YAAYV,GAAmB,SAACgC,GACvClX,EAAUkX,EACVrB,IACAK,OAQJsB,EAASlZ,KAAKmX,KAAKC,UAAUR,GAAiB,IAC9C5W,KAAKmX,KAAKG,YAAYV,GAAiB,SAACwC,GAAgB,OAAAF,EAASE,EAAE,OAEnE,IAAIxU,EAAkB5E,KAAKsY,SAASe,UAAUzC,GAC9C5W,KAAKsY,SAAShB,YAAYV,GAAkB,SAAC0C,GACzC1U,EAAS0U,EACT1B,OAIJ,IAAI2B,GAAyB,EAC7B,SAASC,IACDD,GAAiB,IACjBA,GAAiB,EACjBvZ,KAAKyY,OAAOP,SAAStB,EAAyB,OAGtD,SAAS8B,EAAiBe,GACtB,GAAIA,GAAe,EAAG,CAClBF,EAAgBE,EAChB,IAAMC,EAASC,EAAaC,UAAUH,GAEtChZ,EAAWI,MAAQ6Y,EAAO7Y,MAC1BJ,EAAWgB,SAAWiY,EAAOjY,SAC7BhB,EAAW4D,SAAWqV,EAAOrV,SAC7B5D,EAAWoY,YAAca,EAAOb,YAChCpY,EAAWC,MAAQgZ,EAAOhZ,MAC1BD,EAAWgX,UAAYiC,EAAOjC,UAC9BG,IACAf,EAAcG,IAGtBhX,KAAKyY,OAAOnB,YAAYV,GAAyB,SAACwC,GACpC,OAANA,EACAG,GAAiB,EAEjBb,GAAkBU,MAG1BV,GAAkB1Y,KAAKyY,OAAON,SAASvB,IAEvC,IAAIiD,GAA4B,EAChC,SAASC,IACDD,GAAoB,IACpBA,GAAoB,EACpB7Z,KAAKyY,OAAOP,SAAStB,EAA4B,OAGzD,SAAS+B,EAAoBc,GACzB,GAAIA,GAAe,EAAG,CAClBI,EAAmBJ,EACnB,IAAMC,EAASK,EAAgBH,UAAUH,GAEzChZ,EAAWI,MAAQ6Y,EAAO7Y,MAC1BJ,EAAW2I,aAAesQ,EAAOtQ,aACjC3I,EAAWiJ,WAAagQ,EAAOhQ,WAC/BjJ,EAAW4D,SAAWqV,EAAOrV,SAC7B5D,EAAWoY,YAAca,EAAOb,YAChCpY,EAAWC,MAAQgZ,EAAOhZ,MAC1BD,EAAWgX,UAAYiC,EAAOjC,UAC9BG,IACAf,EAAcG,IAGtBhX,KAAKyY,OAAOnB,YAAYV,GAA4B,SAACwC,GACvC,OAANA,EACAS,GAAoB,EAEpBlB,GAAqBS,MAG7BT,GAAqB3Y,KAAKyY,OAAON,SAASvB,IAE1C,IAAI/V,EAAgBb,KAAKiY,MAAME,SAASvB,GACxC5W,KAAKiY,MAAMX,YAAYV,GAAiB,SAAC4B,GACrC3X,EAAQ2X,EACRgB,IACAM,IACAlC,IACAf,EAAcG,MAGlB,IAAIvV,EAAmBzB,KAAKiY,MAAME,SAASvB,GAC3C5W,KAAKiY,MAAMX,YAAYV,GAAoB,SAACwB,GACxC3W,EAAW2W,EACXoB,IACA5B,OAGJ,IAAIxO,EAAuBpJ,KAAKiY,MAAME,SAASvB,GAC/C5W,KAAKiY,MAAMX,YAAYV,GAAyB,SAACoD,GAC7C5Q,EAAe4Q,EACfF,IACAlC,OAGJ,IAAIlO,EAAqB1J,KAAKiY,MAAME,SAASvB,GAC7C5W,KAAKiY,MAAMX,YAAYV,GAAuB,SAACqD,GAC3CvQ,EAAauQ,EACbH,IACAlC,OAGJ,IAQIhS,EARAvB,GAAmBrE,KAAKiY,MAAME,SAASvB,GAS3C,SAASsD,GAAUC,GACf,GAAIA,IAAYvU,EAAM,CAGlB,IAOUwU,EAPJC,GAFNzU,EAAOuU,KAE2BtU,EAAKC,MACnCuU,GACMD,EAAWpa,KAAKyY,OAAON,SAASvB,KAElC8B,GAAkB0B,IAGhBA,EAAWpa,KAAKyY,OAAON,SAASvB,KAElC+B,GAAqByB,GAI7Bpa,KAAKsa,SAASC,cAAc3D,EAAyByD,GACrDra,KAAKsa,SAASC,cAAc3D,EAAoByD,GAEhDra,KAAKsa,SAASC,cAAc3D,GAA6ByD,GACzDra,KAAKsa,SAASC,cAAc3D,GAA0ByD,GACtDra,KAAKsa,SAASC,cAAc3D,GAAwByD,GAEpD,IAAuB,UAAArD,EAAA,gBACnBD,EADe,MACNoD,GAEbvC,KAnCR5X,KAAKiY,MAAMX,YAAYV,GAAoB,SAACvR,GACxChB,GAAWgB,EACXmU,IACAM,IACAlC,OAkCJsC,GAAUla,KAAKmX,KAAKC,UAAUR,GAAgB,IAC9C5W,KAAKmX,KAAKG,YAAYV,GAAgB,SAACwC,GAAgB,OAAAc,GAAUd,EAAE,OAEnE,IAAIP,GAA2B7Y,KAAKyY,OAAON,SAASvB,GACpD5W,KAAKyY,OAAOnB,YAAYV,GAAwB,SAACwC,GAC7CP,GAAcO,EACdI,IACAM,IACAlC,OAGJ5X,KAAKC,OAAOC,UAAUwG,aAAatG,MAAK,WACpCyX,IACAD,OAEJL,IACAM,K,wFCvaA,aAWM2C,EAAqB,GAC3BA,EAAQ,GAAK,CACT3Z,MAAO,EACPY,SAAU,GACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYC,KACzBha,MAAO,EACP+W,UAAW,KAEf+C,EAAQ,GAAK,CACT3Z,MAAO,EACPY,SAAU,GACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYC,KACzBha,MAAO,IACP+W,UAAW,KAEf+C,EAAQ,GAAK,CACT3Z,MAAO,EACPY,SAAU,IACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYC,KACzBha,MAAO,EACP+W,UAAW,KAEf+C,EAAQ,GAAK,CACT3Z,MAAO,EACPY,SAAU,GACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYC,KACzBha,MAAO,EACP+W,UAAW,KAEf+C,EAAQ,GAAK,CACT3Z,MAAO,EACPY,SAAU,GACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYE,UACzBja,MAAO,GACP+W,UAAW,KAEf+C,EAAQ,GAAK,CACT3Z,MAAO,EACPY,SAAU,GACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYG,0BACzBla,MAAO,GACP+W,UAAW,KAEf+C,EAAQ,GAAK,CACT3Z,MAAO,EACPY,SAAU,IACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYE,UACzBja,MAAO,IACP+W,UAAW,KAEf+C,EAAQ,GAAK,CACT3Z,MAAO,EACPY,SAAU,IACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYC,KACzBha,MAAO,IACP+W,UAAW,KAEf+C,EAAQ,GAAK,CACT3Z,MAAO,EACPY,SAAU,IACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYE,UACzBja,MAAO,EACP+W,UAAW,IAEf+C,EAAQ,GAAK,CACT3Z,MAAO,EACPY,SAAU,GACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYE,UACzBja,MAAO,GACP+W,UAAW,KAEf+C,EAAQ,IAAM,CACV3Z,MAAO,EACPY,SAAU,MACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYE,UACzBja,MAAO,EACP+W,UAAW,IAEf+C,EAAQ,IAAM,CACV3Z,MAAO,EACPY,SAAU,MACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYE,UACzBja,MAAO,EACP+W,UAAW,IAEf+C,EAAQ,IAAM,CACV3Z,MAAO,EACPY,SAAU,MACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYE,UACzBja,MAAO,EACP+W,UAAW,KAEf+C,EAAQ,IAAM,CACV3Z,MAAO,EACPY,SAAU,MACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYC,KACzBha,MAAO,EACP+W,UAAW,IAEf+C,EAAQ,IAAM,CACV3Z,MAAO,EACPY,SAAU,KACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYC,KACzBha,MAAO,IACP+W,UAAW,KAEf+C,EAAQ,IAAM,CACV3Z,MAAO,EACPY,SAAU,IACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYG,0BACzBla,MAAO,EACP+W,UAAW,KAEf+C,EAAQ,IAAM,CACV3Z,MAAO,EACPY,SAAU,IACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYI,aACzBna,MAAO,EACP+W,UAAW,KAEf+C,EAAQ,IAAM,CACV3Z,MAAO,EACPY,SAAU,MACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYK,iBACzBpa,MAAO,IACP+W,UAAW,IAEf+C,EAAQ,IAAM,CACV3Z,MAAO,EACPY,SAAU,GACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYK,iBACzBpa,MAAO,IACP+W,UAAW,KAEf+C,EAAQ,IAAM,CACV3Z,MAAO,EACPY,SAAU,KACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYM,mBACzBra,MAAO,EACP+W,UAAW,KAEf+C,EAAQ,IAAM,CACV3Z,MAAO,EACPY,SAAU,MACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYE,UACzBja,MAAO,EACP+W,UAAW,GAEf+C,EAAQ,IAAM,CACV3Z,MAAO,EACPY,SAAU,MACV4C,SAAU,EACVwU,YAAa,EAAA4B,YAAYM,mBACzBra,MAAO,EACP+W,UAAW,KAQX,EAAAmC,UALJ,SAAmBpJ,GACf,OAAOgK,EAAQhK,K,wFC9LnB,aAYMgK,EAAqB,GAC3BA,EAAQ,GAAK,CACT3Z,MAAO,EACPuI,aAAc,EACdM,WAAY,IACZrF,SAAU,EACVwU,YAAa,EAAA4B,YAAYC,KACzBha,MAAO,EACP+W,UAAW,IAEf+C,EAAQ,GAAK,CACT3Z,MAAO,EACPuI,aAAc,GACdM,WAAY,EACZrF,SAAU,EACVwU,YAAa,EAAA4B,YAAYC,KACzBha,MAAO,EACP+W,UAAW,IAEf+C,EAAQ,GAAK,CACT3Z,MAAO,EACPuI,aAAc,EACdM,WAAY,IACZrF,SAAU,EACVwU,YAAa,EAAA4B,YAAYE,UACzBja,MAAO,IACP+W,UAAW,IAEf+C,EAAQ,GAAK,CACT3Z,MAAO,EACPuI,aAAc,EACdM,WAAY,IACZrF,SAAU,EACVwU,YAAa,EAAA4B,YAAYM,mBACzBra,MAAO,EACP+W,UAAW,MAEf+C,EAAQ,GAAK,CACT3Z,MAAO,EACPuI,aAAc,KACdM,WAAY,KACZrF,SAAU,EACVwU,YAAa,EAAA4B,YAAYI,aACzBna,MAAO,EACP+W,UAAW,KAQX,EAAAmC,UALJ,SAAmBpJ,GACf,OAAOgK,EAAQhK,K,6HC5DnB,IAEKiK,EAFL,SAEA,SAAKA,GACD,cACA,wBACA,sCACA,8BACA,wDACA,0CANJ,CAAKA,IAAAA,EAAW,KA8GZ,EAAAA,YAAAA,EAFA,EAAAxW,kBAjGJ,WACI,OAAQ,EAAAxD,WAAWoY,aACf,KAAK4B,EAAYC,KACb,OAAOM,EACX,KAAKP,EAAYE,UACb,OAAOM,EACX,KAAKR,EAAYK,iBACb,OAAOI,EACX,KAAKT,EAAYI,aACb,OAAOM,EACX,KAAKV,EAAYG,0BACb,OAAOQ,EACX,KAAKX,EAAYM,mBACb,OAAOM,EACX,QACI,OAAO,OAInB,IAAIC,GAAsB,EACtBC,EAAwB,EAAE,GAAI,GAC9BC,EAAoB,EAQxB,SAASR,EAAUjY,GACf,OAAOG,KAAKK,MAAMR,EAAUG,KAAKiB,UAGrC,SAAS8W,EAAelY,GACpB,IAAI2B,EAEJ,GACIA,EAAOsW,EAAUjY,SACZ2B,IAAS4W,GAGlB,OADAA,EAAa5W,EACNA,EAGX,SAASwW,EAAqBnY,GAC1B,IAAI2B,EAEE+W,EAAoBF,EAAY,KAAOA,EAAY,GACzD,GACI7W,EAAOsW,EAAUjY,SACZ0Y,GAAoBF,EAAY,KAAO7W,GAKhD,OAFA6W,EADAC,GAAaA,EAAY,GAAK,GACL9W,EAElBA,EAGX,SAASyW,EAAkBpY,GACvB,IAAI2B,EAEJ,GACIA,EAAOsW,EAAUjY,UACV2B,EAAO,GAAK3B,IAAauY,IAAgB5W,EAAO3B,EAAU,GAAKA,IAAauY,GAGvF,OADAA,EAAa5W,EACNA,EAGX,SAAS0W,EAA6BrY,GAClC,IAAI2B,EAEE+W,EAAoBF,EAAY,KAAOA,EAAY,GACzD,GACI7W,EAAOsW,EAAUjY,SACZ0Y,KACF/W,EAAO,GAAK3B,IAAawY,EAAY,KAAQ7W,EAAO3B,EAAU,GAAKA,IAAawY,EAAY,KAKnG,OAFAA,EADAC,GAAaA,EAAY,GAAK,GACL9W,EAElBA,EAGX,SAAS2W,EAAuBtY,GAC5B,IAAI2B,EAEJ,GACIA,EAAOsW,EAAUjY,UACV2B,EAAO,GAAK3B,IAAauY,GAGpC,OADAA,EAAa5W,EACNA,EAIP,EAAAZ,aAzEJ,WACIwX,GAAc,EACdC,EAAc,EAAE,GAAI,GACpBC,EAAY,KCtCZE,EAA2B,IAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,QClBWJ,CAAoB,K","sources":["webpack://chaos-game-webgl/./src/ts/chaos-game.ts","webpack://chaos-game-webgl/./src/ts/colors.ts","webpack://chaos-game-webgl/./src/ts/downloader.ts","webpack://chaos-game-webgl/./src/ts/drawing-handlers/drawing-handler-base.ts","webpack://chaos-game-webgl/./src/ts/drawing-handlers/drawing-handler-fixed.ts","webpack://chaos-game-webgl/./src/ts/drawing-handlers/drawing-handler-movement.ts","webpack://chaos-game-webgl/./src/ts/drawing-handlers/drawing-handler-preview.ts","webpack://chaos-game-webgl/./src/ts/drawing-handlers/drawing-handlers.ts","webpack://chaos-game-webgl/./src/ts/gl-utils/gl-canvas.ts","webpack://chaos-game-webgl/./src/ts/gl-utils/gl-resource.ts","webpack://chaos-game-webgl/./src/ts/gl-utils/shader-manager.ts","webpack://chaos-game-webgl/./src/ts/gl-utils/shader-sources.ts","webpack://chaos-game-webgl/./src/ts/gl-utils/shader.ts","webpack://chaos-game-webgl/./src/ts/gl-utils/vbo.ts","webpack://chaos-game-webgl/./src/ts/gl-utils/viewport.ts","webpack://chaos-game-webgl/./src/ts/main.ts","webpack://chaos-game-webgl/./src/ts/parameters.ts","webpack://chaos-game-webgl/./src/ts/presets-fixed.ts","webpack://chaos-game-webgl/./src/ts/presets-movement.ts","webpack://chaos-game-webgl/./src/ts/restriction.ts","webpack://chaos-game-webgl/webpack/bootstrap","webpack://chaos-game-webgl/webpack/startup"],"sourcesContent":["import { gl } from \"./gl-utils/gl-canvas\";\r\nimport GLResource from \"./gl-utils/gl-resource\";\r\nimport Shader from \"./gl-utils/shader\";\r\nimport * as ShaderManager from \"./gl-utils/shader-manager\";\r\nimport VBO from \"./gl-utils/vbo\";\r\n\r\nimport ColorFromHue from \"./colors\";\r\nimport { Parameters } from \"./parameters\";\r\n\r\nimport * as Attractors from \"./restriction\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\ninterface IPointsSet {\r\n    color: number[];\r\n    from: number;\r\n    size: number;\r\n}\r\n\r\ninterface IPointsSets {\r\n    data: Float32Array;\r\n    sets: IPointsSet[];\r\n}\r\n\r\nclass ChaosGame extends GLResource {\r\n    public static MAX_POINTS_PER_STEP = Math.pow(2, 18);\r\n    private _shader: Shader;\r\n    private _pointsVBO: VBO;\r\n\r\n    private _viewCenter: number[];\r\n\r\n    public constructor() {\r\n        super(gl);\r\n\r\n        const fillData = new Float32Array(2);\r\n        this._pointsVBO = new VBO(gl, fillData, 2, gl.FLOAT, false);\r\n\r\n        this._viewCenter = [0, 0];\r\n\r\n        Page.Canvas.Observers.mouseDrag.push((dX: number, dY: number) => {\r\n            const aspectRatio = Page.Canvas.getAspectRatio();\r\n            this._viewCenter[0] -= 2 * dX * Parameters.scale * aspectRatio;\r\n            this._viewCenter[1] += 2 * dY * Parameters.scale;\r\n        });\r\n\r\n        Parameters.resetViewObservers.push(() => {\r\n            this._viewCenter = [0, 0];\r\n        });\r\n\r\n        this.recomputePolesPositions(Parameters.poles);\r\n\r\n        this._shader = null;\r\n        ShaderManager.buildShader(\r\n            {\r\n                fragmentFilename: \"points.frag\",\r\n                vertexFilename: \"points.vert\",\r\n                injected: {},\r\n            },\r\n            (shader) => {\r\n                if (shader !== null) {\r\n                    this._shader = shader;\r\n                }\r\n            },\r\n        );\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        if (this._pointsVBO) {\r\n            this._pointsVBO.freeGLResources();\r\n            this._pointsVBO = null;\r\n        }\r\n\r\n        if (this._shader) {\r\n            this._shader.freeGLResources();\r\n            this._shader = null;\r\n        }\r\n    }\r\n\r\n    public get isReadyToDraw(): boolean {\r\n        return this._shader != null;\r\n    }\r\n\r\n    public draw(nbPoints: number, distance: number, quality: number): void {\r\n        if (this.isReadyToDraw) {\r\n            const pointsSets = this.computeXPoints(nbPoints, distance);\r\n            this._pointsVBO.setData(pointsSets.data);\r\n\r\n            /* tslint:disable:no-string-literal */\r\n            this._shader.a[\"aCoords\"].VBO = this._pointsVBO;\r\n\r\n            this._shader.use();\r\n            this._shader.bindAttributes();\r\n\r\n            const strength = 1 / (1 + 254 * quality);\r\n            for (const pointsSet of pointsSets.sets) {\r\n                this._shader.u[\"uColor\"].value = [\r\n                    pointsSet.color[0] * strength,\r\n                    pointsSet.color[1] * strength,\r\n                    pointsSet.color[2] * strength,\r\n                    1];\r\n                this._shader.bindUniforms();\r\n                gl.drawArrays(gl.POINTS, pointsSet.from, pointsSet.size);\r\n            }\r\n            /* tslint:enable:no-string-literal */\r\n        }\r\n    }\r\n\r\n    private recomputePolesPositions(nbPoles: number): Float32Array {\r\n        const aspectRatio = Page.Canvas.getAspectRatio();\r\n        const absoluteToViewport = (point: number[]) => [\r\n            ((point[0] - this._viewCenter[0]) / (Parameters.scale * aspectRatio)),\r\n            ((point[1] - this._viewCenter[1]) / Parameters.scale),\r\n        ];\r\n\r\n        const poles = new Float32Array(2 * nbPoles);\r\n\r\n        const dAngle = -2 * Math.PI / nbPoles;\r\n        const startingAngle = Math.PI / 2 + ((nbPoles + 1) % 2) * dAngle / 2;\r\n\r\n        /* May need to shift vertically in order to center the figure. */\r\n        const centerY = 0.5 * (Math.sin(startingAngle) + Math.sin(startingAngle + Math.floor(nbPoles / 2) * dAngle));\r\n\r\n        for (let i = 0; i < nbPoles; ++i) {\r\n            const angle = startingAngle + i * dAngle;\r\n\r\n            const absolute = [Math.cos(angle), Math.sin(angle) - centerY];\r\n            const relative = absoluteToViewport(absolute);\r\n            poles[2 * i + 0] = relative[0];\r\n            poles[2 * i + 1] = relative[1];\r\n        }\r\n\r\n        return poles;\r\n    }\r\n\r\n    private computeXPoints(N: number, distance: number): IPointsSets {\r\n        const nbPoles = Parameters.poles;\r\n\r\n        Attractors.clearHistory();\r\n        const choosePole = Attractors.getChooseFunction();\r\n\r\n        const poles: Float32Array = this.recomputePolesPositions(nbPoles);\r\n\r\n        /* Ignore the first N points because they might not be at the right place */\r\n        const pos = [2 * Math.random() - 1, 2 * Math.random() - 1];\r\n\r\n        function nextPosWithoutRotation(): number {\r\n            const pole = choosePole(nbPoles);\r\n            pos[0] += distance * (poles[2 * pole + 0] - pos[0]);\r\n            pos[1] += distance * (poles[2 * pole + 1] - pos[1]);\r\n            return pole;\r\n        }\r\n\r\n        const aspectRatio = Page.Canvas.getAspectRatio();\r\n        const rotationTheta = Parameters.rotation * 0.125 * Math.PI;\r\n        const rotationMatrix00 = Math.cos(rotationTheta) / aspectRatio;\r\n        const rotationMatrix10 = -Math.sin(rotationTheta) / aspectRatio;\r\n        const rotationMatrix01 = Math.sin(rotationTheta);\r\n        const rotationMatrix11 = Math.cos(rotationTheta);\r\n        function nextPosWithRotation(): number {\r\n            const pole = choosePole(nbPoles);\r\n            const dX = distance * (poles[2 * pole + 0] - pos[0]) * aspectRatio;\r\n            const dY = distance * (poles[2 * pole + 1] - pos[1]);\r\n            pos[0] += (dX * rotationMatrix00 + dY * rotationMatrix10);\r\n            pos[1] += dX * rotationMatrix01 + dY * rotationMatrix11;\r\n            return pole;\r\n        }\r\n\r\n        let nextPos: () => number;\r\n        if (Parameters.rotation !== 0) {\r\n            nextPos = nextPosWithRotation;\r\n        } else {\r\n            nextPos = nextPosWithoutRotation;\r\n        }\r\n\r\n        for (let i = 0; i < 500; ++i) {\r\n            nextPos();\r\n        }\r\n\r\n        const data = new Float32Array(2 * N);\r\n        const result = {\r\n            data,\r\n            sets: [],\r\n        };\r\n\r\n        if (Parameters.colors) {\r\n            const maxSizePerPole = Math.floor(N / nbPoles);\r\n\r\n            for (let i = 0; i < nbPoles; ++i) {\r\n                result.sets.push({\r\n                    color: ColorFromHue(i / nbPoles),\r\n                    from: i * maxSizePerPole,\r\n                    size: 0,\r\n                });\r\n            }\r\n\r\n            for (let iP = 0; iP < N; ++iP) {\r\n                const pole = nextPos();\r\n                if (result.sets[pole].size + 1 < maxSizePerPole) {\r\n                    const index = 2 * (result.sets[pole].from + result.sets[pole].size);\r\n                    result.data[index + 0] = pos[0];\r\n                    result.data[index + 1] = pos[1];\r\n                    result.sets[pole].size++;\r\n                }\r\n            }\r\n        } else {\r\n            result.sets.push({\r\n                color: [1, 1, 1],\r\n                from: 0,\r\n                size: N,\r\n            });\r\n\r\n            for (let iP = 0; iP < N; ++iP) {\r\n                nextPos();\r\n                const curr = 2 * iP;\r\n                result.data[curr + 0] = pos[0];\r\n                result.data[curr + 1] = pos[1];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default ChaosGame;\r\n","/**\r\n * @param hue in [0,1]\r\n * @return vec3 in [0,1]\r\n */\r\nfunction ColorFromHue(hue: number): number [] {\r\n    let r = 0;\r\n    let g = 0;\r\n    let b = 0;\r\n\r\n    hue = (hue %  1) * 6;\r\n\r\n    if (hue < 1) {\r\n        r = 1;\r\n        g = hue;\r\n    } else if (hue < 2) {\r\n        r = 2 - hue;\r\n        g = 1;\r\n    } else if (hue < 3) {\r\n        g = 1;\r\n        b = hue - 2;\r\n    } else if (hue < 4) {\r\n        g = 4 - hue;\r\n        b = 1;\r\n    } else if (hue < 5) {\r\n        r = hue - 4;\r\n        b = 1;\r\n    } else if (hue < 6) {\r\n        r = 1;\r\n        b = 6 - hue;\r\n    }\r\n\r\n    return [r, g, b];\r\n}\r\n\r\nexport default ColorFromHue;\r\n","import * as GLCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\nimport Viewport from \"./gl-utils/viewport\";\r\n\r\nimport Game from \"./chaos-game\";\r\nimport * as DrawingHandlers from \"./drawing-handlers/drawing-handlers\";\r\nimport { Mode, Parameters } from \"./parameters\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nfunction downloadCanvas(game: Game, size: number): void {\r\n    const canvas = Page.Canvas.getCanvas() as HTMLCanvasElement;\r\n    const handler = (Parameters.mode === Mode.FIXED) ? DrawingHandlers.fixed : DrawingHandlers.movement;\r\n\r\n    const nbPointsNeeded = handler.computeTotalPointsNeeded([size, size]);\r\n    if (nbPointsNeeded > 50000000) {\r\n        const message = \"Rendering your image might take a while \" +\r\n            \"because it requires to draw \" + nbPointsNeeded.toLocaleString() + \" points. \" +\r\n            \"Do you want to proceed?\";\r\n        if (!confirm(message)) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    function manuallyTriggerCanvasResizeEvent() {\r\n        const canvasSize = Page.Canvas.getSize();\r\n        for (const func of Page.Canvas.Observers.canvasResize) {\r\n            func(canvasSize[0], canvasSize[1]);\r\n        }\r\n    }\r\n\r\n    function isolateCanvas() {\r\n        Page.Canvas.showLoader(true);\r\n\r\n        canvas.style.position = \"absolute\";\r\n        canvas.style.width = size + \"px\";\r\n        canvas.style.height = size + \"px\";\r\n        canvas.width = size;\r\n        canvas.height = size;\r\n\r\n        manuallyTriggerCanvasResizeEvent();\r\n        GLCanvas.adjustSize();\r\n        Viewport.setFullCanvas(gl);\r\n    }\r\n\r\n    function restoreCanvas() {\r\n        canvas.style.position = \"\";\r\n        canvas.style.width = \"\";\r\n        canvas.style.height = \"\";\r\n        Page.Canvas.showLoader(false);\r\n        Page.Canvas.setLoaderText(\"\");\r\n        manuallyTriggerCanvasResizeEvent();\r\n    }\r\n\r\n    isolateCanvas();\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n    handler.reset();\r\n    while (handler.needsToKeepDrawing) {\r\n        handler.drawStep(game);\r\n    }\r\n\r\n    const downloadedName = \"chaos-game.png\";\r\n    if ((canvas as any).msToBlob) { // for IE\r\n        const blob = (canvas as any).msToBlob();\r\n        (window.navigator as any).msSaveBlob(blob, downloadedName);\r\n\r\n        restoreCanvas();\r\n    } else {\r\n        canvas.toBlob((blob) => {\r\n            const link = document.createElement(\"a\");\r\n            link.download = downloadedName;\r\n            link.href = URL.createObjectURL(blob);\r\n            link.click();\r\n\r\n            restoreCanvas();\r\n        });\r\n    }\r\n}\r\n\r\nexport default downloadCanvas;\r\n","import ChaosGame from \"../chaos-game\";\r\n\r\nabstract class DrawingHandlerBase {\r\n    public abstract reset(): void;\r\n    public abstract drawStep(game: ChaosGame): void;\r\n\r\n    public abstract get needsToKeepDrawing(): boolean;\r\n    public abstract get totalPointsDrawn(): number;\r\n    public abstract computeTotalPointsNeeded(canvasSize: number[]): number;\r\n}\r\n\r\nexport default DrawingHandlerBase;\r\n","import ChaosGame from \"../chaos-game\";\r\nimport { Parameters } from \"../parameters\";\r\nimport DrawingHandlerBase from \"./drawing-handler-base\";\r\n\r\nclass DrawingHandlerFixed extends DrawingHandlerBase {\r\n    private _totalPointsDrawn: number;\r\n\r\n    public reset(): void {\r\n        this._totalPointsDrawn = 0;\r\n    }\r\n\r\n    public drawStep(game: ChaosGame): void {\r\n        const nbPointsToDraw = this.nbPointsNeeded - this._totalPointsDrawn;\r\n        const nbPoints = Math.min(ChaosGame.MAX_POINTS_PER_STEP, nbPointsToDraw);\r\n        game.draw(nbPoints, Parameters.distance, Parameters.quality);\r\n\r\n        this._totalPointsDrawn += nbPoints;\r\n    }\r\n\r\n    public get needsToKeepDrawing(): boolean {\r\n        return this._totalPointsDrawn < this.nbPointsNeeded;\r\n    }\r\n\r\n    public get totalPointsDrawn(): number {\r\n        return this._totalPointsDrawn;\r\n    }\r\n\r\n    public computeTotalPointsNeeded(canvasSize: number[]): number {\r\n        const sizeFactor = Parameters.computeSizeFactor(canvasSize);\r\n        return DrawingHandlerFixed.computeTotalPointsNeededInternal(sizeFactor);\r\n    }\r\n\r\n    private  static computeTotalPointsNeededInternal(sizeFactor: number): number {\r\n        const exactValue = 2000 * Parameters.nbPointsNeeded * sizeFactor * sizeFactor;\r\n        return Math.ceil(exactValue);\r\n    }\r\n\r\n    private get nbPointsNeeded(): number {\r\n        const sizeFactor = Parameters.sizeFactor;\r\n        return DrawingHandlerFixed.computeTotalPointsNeededInternal(sizeFactor);\r\n    }\r\n}\r\n\r\nexport default DrawingHandlerFixed;\r\n","import ChaosGame from \"../chaos-game\";\r\nimport { Parameters } from \"../parameters\";\r\nimport DrawingHandlerBase from \"./drawing-handler-base\";\r\n\r\nclass DrawingModeMovement extends DrawingHandlerBase {\r\n    private _totalPointsDrawn: number;\r\n    private _distance: number;\r\n\r\n    private _pointsNeededPerDistanceUnit: number;\r\n    private _distanceGap: number;\r\n    private _distancePerStep: number;\r\n\r\n    public reset(): void {\r\n        this._totalPointsDrawn = 0;\r\n        this._distance = Parameters.distanceFrom;\r\n        this._pointsNeededPerDistanceUnit = DrawingModeMovement.computePointsPerDistanceUnit(Parameters.sizeFactor);\r\n        this._distanceGap = 0.4 / Parameters.sizeFactor;\r\n\r\n        const minTotalSteps = 180;\r\n        const totalDistance = Parameters.distanceTo - Parameters.distanceFrom;\r\n        const maxDistancePerStep = totalDistance / minTotalSteps;\r\n        const potentialMaxPointsPerStep = maxDistancePerStep * this._pointsNeededPerDistanceUnit;\r\n\r\n        this._distancePerStep = maxDistancePerStep;\r\n        if (potentialMaxPointsPerStep > ChaosGame.MAX_POINTS_PER_STEP) {\r\n            this._distancePerStep *= ChaosGame.MAX_POINTS_PER_STEP / potentialMaxPointsPerStep;\r\n        }\r\n    }\r\n\r\n    public drawStep(game: ChaosGame): void {\r\n        const finalDistanceAfterThisStep = Math.min(this._distance + this._distancePerStep, Parameters.distanceTo);\r\n\r\n        while (this._distance + this._distanceGap < finalDistanceAfterThisStep) {\r\n            this.drawDistanceGap(game, this._distanceGap);\r\n        }\r\n\r\n        if (this._distance < finalDistanceAfterThisStep) {\r\n            this.drawDistanceGap(game, finalDistanceAfterThisStep - this._distance);\r\n        }\r\n    }\r\n\r\n    public get needsToKeepDrawing(): boolean {\r\n        return this._distance < Parameters.distanceTo;\r\n    }\r\n\r\n    public get totalPointsDrawn(): number {\r\n        return this._totalPointsDrawn;\r\n    }\r\n\r\n    public computeTotalPointsNeeded(canvasSize: number[]): number {\r\n        const sizeFactor = Parameters.computeSizeFactor(canvasSize);\r\n        const pointsPerDistanceUnit = DrawingModeMovement.computePointsPerDistanceUnit(sizeFactor);\r\n        const totalDistance = Parameters.distanceTo - Parameters.distanceFrom;\r\n        return Math.ceil(pointsPerDistanceUnit * totalDistance);\r\n    }\r\n\r\n    private static computePointsPerDistanceUnit(sizeFactor: number): number {\r\n        return Math.ceil(2000 * Parameters.nbPointsNeeded * sizeFactor * sizeFactor);\r\n    }\r\n\r\n    private drawDistanceGap(game: ChaosGame, distanceGap: number): void {\r\n        const nbPoints = Math.ceil(distanceGap * this._pointsNeededPerDistanceUnit);\r\n        game.draw(nbPoints, this._distance, Parameters.quality);\r\n        this._totalPointsDrawn += nbPoints;\r\n        this._distance += distanceGap;\r\n    }\r\n}\r\n\r\nexport default DrawingModeMovement;\r\n","import ChaosGame from \"../chaos-game\";\r\nimport { Parameters } from \"../parameters\";\r\nimport DrawingHandlerBase from \"./drawing-handler-base\";\r\n\r\nconst quality = 0;\r\nconst nbPointsNeeded = Math.pow(2, 17);\r\n\r\nclass DrawingHandlerPreview extends DrawingHandlerBase {\r\n    /* tslint:disable:no-empty */\r\n    public reset(): void {}\r\n    /* tslint:enable:no-empty */\r\n\r\n    public drawStep(game: ChaosGame): void {\r\n        game.draw(nbPointsNeeded, Parameters.distance, quality);\r\n    }\r\n\r\n    public get needsToKeepDrawing(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public get totalPointsDrawn(): number {\r\n        return nbPointsNeeded;\r\n    }\r\n\r\n    public computeTotalPointsNeeded(canvasSize: number[]): number {\r\n        return nbPointsNeeded;\r\n    }\r\n}\r\n\r\nexport default DrawingHandlerPreview;\r\n","import DrawingHandlerBase from \"./drawing-handler-base\";\r\nimport DrawingHandlerFixed from \"./drawing-handler-fixed\";\r\nimport DrawingModeMovement from \"./drawing-handler-movement\";\r\nimport DrawingModePreview from \"./drawing-handler-preview\";\r\n\r\nconst fixedMode = new DrawingHandlerFixed();\r\nconst movementMode = new DrawingModeMovement();\r\nconst previewMode = new DrawingModePreview();\r\n\r\nexport {\r\n    DrawingHandlerBase as Base,\r\n    fixedMode as fixed,\r\n    movementMode as movement,\r\n    previewMode as preview,\r\n};\r\n","import \"../page-interface-generated\";\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags: any): boolean {\r\n    function setError(message: string) {\r\n        Page.Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Page.Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(\"Your browser or device only supports experimental WebGL.\\n\" +\r\n            \"The simulation may not run as expected.\");\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0, 0, 0, 1);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n\r\n    const canvas = gl.canvas as HTMLCanvasElement;\r\n\r\n    const width: number = Math.floor(canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(canvas.clientHeight * cssPixel);\r\n    if (canvas.width !== width || canvas.height !== height) {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport default GLResource;\r\n","import { gl } from \"./gl-canvas\";\r\nimport Shader from \"./shader\";\r\nimport * as ShaderSources from \"./shader-sources\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentFilename: string;\r\n    vertexFilename: string;\r\n    injected: { [id: string]: string };\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader;\r\n    infos: IShaderInfos;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader} = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\ntype BuildCallback = (builtShader: Shader | null) => void;\r\n\r\nfunction buildShader(infos: IShaderInfos, callback: BuildCallback) {\r\n    let sourcesPending = 2;\r\n    let sourcesFailed = 0;\r\n\r\n    function loadedSource(success: boolean) {\r\n        function processSource(source: string): string {\r\n            return source.replace(/#INJECT\\((.*)\\)/mg, (match, name) => {\r\n                if (infos.injected[name]) {\r\n                    return infos.injected[name];\r\n                }\r\n                return match;\r\n            });\r\n        }\r\n\r\n        sourcesPending--;\r\n        if (!success) {\r\n            sourcesFailed++;\r\n        }\r\n\r\n        if (sourcesPending === 0) {\r\n            let shader = null;\r\n\r\n            if (sourcesFailed === 0) {\r\n                const vert = ShaderSources.getSource(infos.vertexFilename);\r\n                const frag = ShaderSources.getSource(infos.fragmentFilename);\r\n\r\n                const processedVert = processSource(vert);\r\n                const processedFrag = processSource(frag);\r\n\r\n                shader = new Shader(gl, processedVert, processedFrag);\r\n            }\r\n\r\n            callback(shader);\r\n        }\r\n    }\r\n\r\n    ShaderSources.loadSource(infos.vertexFilename, loadedSource);\r\n    ShaderSources.loadSource(infos.fragmentFilename, loadedSource);\r\n}\r\n\r\nfunction registerShader(name: string, infos: IShaderInfos, callback: RegisterCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedShader) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed, cached.shader);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedShaders[name] === \"undefined\") {\r\n        cachedShaders[name] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            infos,\r\n            pending: true,\r\n            shader: null,\r\n        };\r\n        const cached = cachedShaders[name];\r\n\r\n        buildShader(infos, (builtShader) => {\r\n            cached.pending = false;\r\n            cached.failed = builtShader === null;\r\n            cached.shader = builtShader;\r\n\r\n            callAndClearCallbacks(cached);\r\n        });\r\n    } else {\r\n        const cached = cachedShaders[name];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteShader(name: string) {\r\n    if (cachedShaders[name]) {\r\n        if (cachedShaders[name].shader) {\r\n            cachedShaders[name].shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    registerShader,\r\n    deleteShader,\r\n};\r\n","type LoadCallback = (success: boolean)  => void;\r\n\r\ninterface ICachedSource {\r\n    text: string;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: LoadCallback[];\r\n}\r\n\r\nconst cachedSources: { [id: string]: ICachedSource } = {};\r\n\r\n/* Fetches asynchronously the shader source from server and stores it in cache. */\r\nfunction loadSource(filename: string, callback: LoadCallback) {\r\n    function callAndClearCallbacks(cached: ICachedSource) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedSources[filename] === \"undefined\") {\r\n        cachedSources[filename] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            pending: true,\r\n            text: null,\r\n        };\r\n        const cached = cachedSources[filename];\r\n\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"./shaders/\" + filename, true);\r\n        xhr.onload = () => {\r\n            if (xhr.readyState === 4) {\r\n                cached.pending = false;\r\n\r\n                if (xhr.status === 200) {\r\n                    cached.text = xhr.responseText;\r\n                    cached.failed = false;\r\n                } else {\r\n                    console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n                    cached.failed = true;\r\n                }\r\n\r\n                callAndClearCallbacks(cached);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n            cached.pending = false;\r\n            cached.failed = true;\r\n            callAndClearCallbacks(cached);\r\n        };\r\n\r\n        xhr.send(null);\r\n    } else {\r\n        const cached = cachedSources[filename];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            cached.callbacks = [callback];\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSource(filename: string): string {\r\n    return cachedSources[filename].text;\r\n}\r\n\r\nexport {\r\n    getSource,\r\n    loadSource,\r\n};\r\n","import GLResource from \"./gl-resource\";\r\nimport VBO from \"./vbo\";\r\n\r\nfunction notImplemented(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1iv(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                       value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                         value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\nconst types = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: IShaderUniform[];\r\n    public a: IShaderAttribute[];\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = [];\r\n        for (let i = 0; i < this.uCount; ++i) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = [];\r\n        for (let i = 0; i < this.aCount; ++i) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShaderProgram;\r\n","import GLResource from \"./gl-resource\";\r\n\r\nenum Usage {\r\n    DYNAMIC,\r\n    STATIC,\r\n}\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT, true);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n    private usage: Usage;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum, staticUsage: boolean = true) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (staticUsage) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n        this.usage = (staticUsage) ? Usage.STATIC : Usage.DYNAMIC;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n\r\n    public setData(array: any): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (this.usage === Usage.STATIC) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n}\r\n\r\nexport default VBO;\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport default Viewport;\r\n","import * as GLCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\nimport Viewport from \"./gl-utils/viewport\";\r\n\r\nimport Game from \"./chaos-game\";\r\nimport DownloadCanvas from \"./downloader\";\r\nimport { Mode, Parameters, Theme } from \"./parameters\";\r\n\r\nimport * as DrawingHandlers from \"./drawing-handlers/drawing-handlers\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nfunction main() {\r\n    initGL();\r\n\r\n    Page.Canvas.showLoader(true);\r\n\r\n    Parameters.quality = 0.6;\r\n    Parameters.colors = false;\r\n    Parameters.presetFixed = 15;\r\n    Parameters.presetMovement = 0;\r\n\r\n    let needToClearCanvas = true;\r\n    let lockedCanvas = false;\r\n    bindEvents();\r\n\r\n    const game = new Game();\r\n\r\n    let totalPoints: number;\r\n    function setTotalPoints(total: number): void {\r\n        totalPoints = total;\r\n        Page.Canvas.setIndicatorText(\"points-drawn\", totalPoints.toLocaleString());\r\n    }\r\n    setTotalPoints(0);\r\n\r\n    function clearCanvas() {\r\n        GLCanvas.adjustSize();\r\n        Viewport.setFullCanvas(gl);\r\n\r\n        if (Parameters.theme === Theme.LIGHT) {\r\n            gl.clearColor(1, 1, 1, 1);\r\n            gl.blendEquation(gl.FUNC_REVERSE_SUBTRACT);\r\n        } else {\r\n            gl.clearColor(0, 0, 0, 1);\r\n            gl.blendEquation(gl.FUNC_ADD);\r\n        }\r\n\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        setTotalPoints(0);\r\n        needToClearCanvas = false;\r\n    }\r\n\r\n    let drawingHandler: DrawingHandlers.Base;\r\n\r\n    let firstDraw = true;\r\n    function mainLoop() {\r\n        if (!lockedCanvas) {\r\n            if (needToClearCanvas) {\r\n                clearCanvas();\r\n                drawingHandler = (Parameters.mode ===  Mode.FIXED) ? DrawingHandlers.fixed : DrawingHandlers.movement;\r\n                drawingHandler.reset();\r\n            }\r\n\r\n            if (Page.Canvas.isMouseDown()) {\r\n                DrawingHandlers.preview.drawStep(game);\r\n                setTotalPoints(DrawingHandlers.preview.totalPointsDrawn);\r\n                needToClearCanvas = true;\r\n            } else if (game.isReadyToDraw) {\r\n                if (drawingHandler.needsToKeepDrawing) {\r\n                    drawingHandler.drawStep(game);\r\n                    setTotalPoints(drawingHandler.totalPointsDrawn);\r\n                }\r\n\r\n                if (firstDraw) {\r\n                    firstDraw = false;\r\n                    Page.Canvas.showLoader(false);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    requestAnimationFrame(mainLoop);\r\n\r\n    function initGL() {\r\n        const glParams = {\r\n            alpha: false,\r\n            antialias: false,\r\n            depth: false,\r\n            preserveDrawingBuffer: true,\r\n        };\r\n        if (!GLCanvas.initGL(glParams)) {\r\n            return;\r\n        }\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE);\r\n    }\r\n\r\n    function bindEvents() {\r\n        Parameters.clearObservers.push(() => needToClearCanvas = true);\r\n\r\n        Parameters.downloadObservers.push((wantedSize: number) => {\r\n            lockedCanvas = true;\r\n            DownloadCanvas(game, wantedSize);\r\n            lockedCanvas = false;\r\n            needToClearCanvas = true;\r\n        });\r\n    }\r\n}\r\n\r\nmain();\r\n","import * as PresetsFixed from \"./presets-fixed\";\r\nimport * as PresetsMovement from \"./presets-movement\";\r\nimport { Restriction } from \"./restriction\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nfunction clamp(x: number, minVal: number, maxVal: number): number {\r\n    return Math.min(maxVal, Math.max(minVal, x));\r\n}\r\n\r\nenum Theme {\r\n    DARK = \"dark\",\r\n    LIGHT = \"light\",\r\n}\r\n\r\n/* === IDs ============================================================ */\r\nconst controlId = {\r\n    MODE: \"mode\",\r\n    PRESETS_FIXED: \"presets-fixed-picker-id\",\r\n    PRESETS_MOVEMENT: \"presets-movement-picker-id\",\r\n    POLES: \"poles-range-id\",\r\n    DISTANCE: \"distance-range-id\",\r\n    DISTANCE_FROM: \"distance-from-range-id\",\r\n    DISTANCE_TO: \"distance-to-range-id\",\r\n    ROTATION: \"rotation-range-id\",\r\n    FORBID_REPEAT: \"forbid-repeat-checkbox-id\",\r\n    RESTRICTIONS: \"restrictions-picker-id\",\r\n\r\n    INTENSITY: \"intensity-range-id\",\r\n    QUALITY: \"quality-range-id\",\r\n    THEME: \"theme\",\r\n    COLORS: \"colors-checkbox-id\",\r\n    RESET: \"reset-button-id\",\r\n\r\n    RESULT_SIZE: \"result-dimensions\",\r\n    DOWNLOAD: \"result-download-id\",\r\n};\r\n\r\n/* === OBSERVERS ====================================================== */\r\ntype DownloadObserver = (size: number) => void;\r\ntype GenericObserver = () => void;\r\ntype ModeChangeObserver = (newMode: Mode) => void;\r\n\r\nfunction callObservers(observersList: any[]): void {\r\n    for (const observer of observersList) {\r\n        observer();\r\n    }\r\n}\r\n\r\nconst observers: {\r\n    clear: GenericObserver[],\r\n    download: DownloadObserver[],\r\n    modeChange: ModeChangeObserver[],\r\n    resetView: GenericObserver[],\r\n} = {\r\n    clear: [],\r\n    download: [],\r\n    modeChange: [],\r\n    resetView: [],\r\n};\r\n\r\nenum Mode {\r\n    FIXED = \"fixed\",\r\n    MOVEMENT = \"movement\",\r\n}\r\n\r\nPage.FileControl.addDownloadObserver(controlId.DOWNLOAD, () => {\r\n    const size = +Page.Tabs.getValues(controlId.RESULT_SIZE)[0];\r\n    for (const observer of observers.download) {\r\n        observer(size);\r\n    }\r\n});\r\n\r\nPage.Button.addObserver(controlId.RESET, () => callObservers(observers.clear));\r\nPage.Canvas.Observers.mouseDrag.push(() => callObservers(observers.clear));\r\n\r\nlet nbPointsNeeded: number = 0;\r\nfunction recomputeNbPointsNeeded() {\r\n    const newValue = intensity * (quality + 0.1);\r\n    const needToRedraw = (mode === Mode.MOVEMENT) || (newValue < nbPointsNeeded);\r\n    nbPointsNeeded = newValue;\r\n\r\n    if (needToRedraw) {\r\n        restartRendering();\r\n    }\r\n}\r\n\r\nlet sizeFactor: number = 0;\r\nfunction recomputeSizeFactor() {\r\n    const canvasSize = Page.Canvas.getSize();\r\n    sizeFactor = Parameters.computeSizeFactor(canvasSize);\r\n}\r\n\r\n/* === INTERFACE ====================================================== */\r\nabstract class Parameters {\r\n    public static get scale(): number {\r\n        return scale;\r\n    }\r\n    public static set scale(s: number) {\r\n        scale = clamp(s, MIN_SCALE, MAX_SCALE);\r\n        recomputeSizeFactor();\r\n        callObservers(observers.clear);\r\n    }\r\n\r\n    public static computeSizeFactor(canvasSize: number[]): number {\r\n        const minSide = Math.min(canvasSize[0], canvasSize[1]);\r\n        return minSide / scale;\r\n    }\r\n    public static get sizeFactor(): number {\r\n        return sizeFactor;\r\n    }\r\n\r\n    public static get nbPointsNeeded(): number {\r\n        return nbPointsNeeded;\r\n    }\r\n\r\n    public static get intensity(): number {\r\n        return intensity;\r\n    }\r\n    public static set intensity(i: number) {\r\n        Page.Range.setValue(controlId.INTENSITY, i);\r\n        intensity = Page.Range.getValue(controlId.INTENSITY);\r\n        recomputeNbPointsNeeded();\r\n    }\r\n\r\n    public static get quality(): number {\r\n        return quality;\r\n    }\r\n    public static set quality(d: number) {\r\n        quality = d;\r\n        Page.Range.setValue(controlId.QUALITY, quality);\r\n    }\r\n\r\n    public static get theme(): Theme {\r\n        return theme;\r\n    }\r\n\r\n    public static get colors(): boolean {\r\n        return colors;\r\n    }\r\n    public static set colors(c: boolean) {\r\n        colors = c;\r\n        Page.Checkbox.setChecked(controlId.COLORS, c);\r\n    }\r\n\r\n    public static get mode(): Mode {\r\n        return mode;\r\n    }\r\n    public static get modeChangeObservers(): ModeChangeObserver[] {\r\n        return observers.modeChange;\r\n    }\r\n\r\n    public static set presetFixed(p: number) {\r\n        Page.Picker.setValue(controlId.PRESETS_FIXED, \"\" + p);\r\n        if (mode === Mode.FIXED) {\r\n            applyPresetFixed(p);\r\n        }\r\n    }\r\n\r\n    public static set presetMovement(p: number) {\r\n        Page.Picker.setValue(controlId.PRESETS_MOVEMENT, \"\" + p);\r\n        if (mode === Mode.MOVEMENT) {\r\n            applyPresetMovement(p);\r\n        }\r\n    }\r\n\r\n    public static get poles(): number {\r\n        return poles;\r\n    }\r\n    public static set poles(q: number) {\r\n        poles = q;\r\n        Page.Range.setValue(controlId.POLES, poles);\r\n        callObservers(observers.clear);\r\n    }\r\n\r\n    public static get distance(): number {\r\n        return distance;\r\n    }\r\n    public static set distance(d: number) {\r\n        distance = d;\r\n        Page.Range.setValue(controlId.DISTANCE, d);\r\n    }\r\n\r\n    public static get distanceFrom(): number {\r\n        return Math.min(distanceFrom, distanceTo);\r\n    }\r\n    public static set distanceFrom(d: number) {\r\n        distanceFrom = d;\r\n        Page.Range.setValue(controlId.DISTANCE_FROM, d);\r\n    }\r\n\r\n    public static get distanceTo(): number {\r\n        return Math.max(distanceFrom, distanceTo);\r\n    }\r\n    public static set distanceTo(d: number) {\r\n        distanceTo = d;\r\n        Page.Range.setValue(controlId.DISTANCE_TO, d);\r\n    }\r\n\r\n    public static get rotation(): number {\r\n        return rotation;\r\n    }\r\n    public static set rotation(r: number) {\r\n        rotation = r;\r\n        Page.Range.setValue(controlId.ROTATION, r);\r\n    }\r\n\r\n    public static get restriction(): Restriction {\r\n        return restriction;\r\n    }\r\n    public static set restriction(r: Restriction) {\r\n        restriction = r;\r\n        Page.Picker.setValue(controlId.RESTRICTIONS, r);\r\n    }\r\n\r\n    public static get downloadObservers(): DownloadObserver[] {\r\n        return observers.download;\r\n    }\r\n\r\n    public static get clearObservers(): GenericObserver[] {\r\n        return observers.clear;\r\n    }\r\n\r\n    public static get resetViewObservers(): GenericObserver[] {\r\n        return observers.resetView;\r\n    }\r\n}\r\n\r\n/* === EVENTS BINDING ================================================= */\r\n/* --- RENDERING ------------------------------------------------------ */\r\nfunction restartRendering() {\r\n    callObservers(observers.clear);\r\n}\r\n\r\nlet scale = 1.0;\r\nconst MIN_SCALE = 0.05; // should be > 0\r\nconst MAX_SCALE = 6.0;\r\nPage.Canvas.Observers.mouseWheel.push((delta: number, zoomCenter: number[]) => {\r\n    const newScale = clamp(scale * (1 + 0.2 * delta), MIN_SCALE, MAX_SCALE);\r\n\r\n    if (newScale !== scale) {\r\n        scale = newScale;\r\n        recomputeSizeFactor();\r\n        restartRendering();\r\n    }\r\n});\r\n\r\nlet intensity: number = Page.Range.getValue(controlId.INTENSITY);\r\nPage.Range.addObserver(controlId.INTENSITY, (i: number) => {\r\n    intensity = i;\r\n    recomputeNbPointsNeeded();\r\n});\r\n\r\nlet quality: number = Page.Range.getValue(controlId.QUALITY);\r\nPage.Range.addObserver(controlId.QUALITY, (q: number) => {\r\n    quality = q;\r\n    recomputeNbPointsNeeded();\r\n    restartRendering();\r\n});\r\n\r\nlet theme: Theme;\r\nfunction setTheme(t: Theme) {\r\n    theme = t;\r\n    restartRendering();\r\n}\r\nsetTheme(Page.Tabs.getValues(controlId.THEME)[0] as Theme);\r\nPage.Tabs.addObserver(controlId.THEME, (v: string[]) => setTheme(v[0] as Theme));\r\n\r\nlet colors: boolean = Page.Checkbox.isChecked(controlId.COLORS);\r\nPage.Checkbox.addObserver(controlId.COLORS, (checked: boolean) => {\r\n    colors = checked;\r\n    restartRendering();\r\n});\r\n\r\n/* --- PARAMETERS ----------------------------------------------------- */\r\nlet presetFixedId: number = -1;\r\nfunction clearPresetFixed() {\r\n    if (presetFixedId >= 0) {\r\n        presetFixedId = -1;\r\n        Page.Picker.setValue(controlId.PRESETS_FIXED, null);\r\n    }\r\n}\r\nfunction applyPresetFixed(newPresetId: number) {\r\n    if (newPresetId >= 0) {\r\n        presetFixedId = newPresetId;\r\n        const preset = PresetsFixed.getPreset(newPresetId);\r\n\r\n        Parameters.poles = preset.poles;\r\n        Parameters.distance = preset.distance;\r\n        Parameters.rotation = preset.rotation;\r\n        Parameters.restriction = preset.restriction;\r\n        Parameters.scale = preset.scale;\r\n        Parameters.intensity = preset.intensity;\r\n        restartRendering();\r\n        callObservers(observers.resetView);\r\n    }\r\n}\r\nPage.Picker.addObserver(controlId.PRESETS_FIXED, (v: string) => {\r\n    if (v === null) {\r\n        presetFixedId = -1;\r\n    } else {\r\n        applyPresetFixed(+v);\r\n    }\r\n});\r\napplyPresetFixed(+Page.Picker.getValue(controlId.PRESETS_FIXED));\r\n\r\nlet presetMovementId: number = -1;\r\nfunction clearPresetMovement() {\r\n    if (presetMovementId >= 0) {\r\n        presetMovementId = -1;\r\n        Page.Picker.setValue(controlId.PRESETS_MOVEMENT, null);\r\n    }\r\n}\r\nfunction applyPresetMovement(newPresetId: number) {\r\n    if (newPresetId >= 0) {\r\n        presetMovementId = newPresetId;\r\n        const preset = PresetsMovement.getPreset(newPresetId);\r\n\r\n        Parameters.poles = preset.poles;\r\n        Parameters.distanceFrom = preset.distanceFrom;\r\n        Parameters.distanceTo = preset.distanceTo;\r\n        Parameters.rotation = preset.rotation;\r\n        Parameters.restriction = preset.restriction;\r\n        Parameters.scale = preset.scale;\r\n        Parameters.intensity = preset.intensity;\r\n        restartRendering();\r\n        callObservers(observers.resetView);\r\n    }\r\n}\r\nPage.Picker.addObserver(controlId.PRESETS_MOVEMENT, (v: string) => {\r\n    if (v === null) {\r\n        presetMovementId = -1;\r\n    } else {\r\n        applyPresetMovement(+v);\r\n    }\r\n});\r\napplyPresetMovement(+Page.Picker.getValue(controlId.PRESETS_MOVEMENT));\r\n\r\nlet poles: number = Page.Range.getValue(controlId.POLES);\r\nPage.Range.addObserver(controlId.POLES, (p: number) => {\r\n    poles = p;\r\n    clearPresetFixed();\r\n    clearPresetMovement();\r\n    restartRendering();\r\n    callObservers(observers.resetView);\r\n});\r\n\r\nlet distance: number = Page.Range.getValue(controlId.DISTANCE);\r\nPage.Range.addObserver(controlId.DISTANCE, (d: number) => {\r\n    distance = d;\r\n    clearPresetFixed();\r\n    restartRendering();\r\n});\r\n\r\nlet distanceFrom: number = Page.Range.getValue(controlId.DISTANCE_FROM);\r\nPage.Range.addObserver(controlId.DISTANCE_FROM, (df: number) => {\r\n    distanceFrom = df;\r\n    clearPresetMovement();\r\n    restartRendering();\r\n});\r\n\r\nlet distanceTo: number = Page.Range.getValue(controlId.DISTANCE_TO);\r\nPage.Range.addObserver(controlId.DISTANCE_TO, (dt: number) => {\r\n    distanceTo = dt;\r\n    clearPresetMovement();\r\n    restartRendering();\r\n});\r\n\r\nlet rotation: number = Page.Range.getValue(controlId.ROTATION);\r\nPage.Range.addObserver(controlId.ROTATION, (r: number) => {\r\n    rotation = r;\r\n    clearPresetFixed();\r\n    clearPresetMovement();\r\n    restartRendering();\r\n});\r\n\r\nlet mode: Mode;\r\nfunction applyMode(newMode: Mode): void {\r\n    if (newMode !== mode) {\r\n        mode = newMode;\r\n\r\n        const isFixed: boolean = mode === Mode.FIXED;\r\n        if (isFixed) {\r\n            const presetId = Page.Picker.getValue(controlId.PRESETS_FIXED);\r\n            if (presetId) {\r\n                applyPresetFixed(+presetId);\r\n            }\r\n        } else {\r\n            const presetId = Page.Picker.getValue(controlId.PRESETS_MOVEMENT);\r\n            if (presetId) {\r\n                applyPresetMovement(+presetId);\r\n            }\r\n        }\r\n\r\n        Page.Controls.setVisibility(controlId.PRESETS_FIXED, isFixed);\r\n        Page.Controls.setVisibility(controlId.DISTANCE, isFixed);\r\n\r\n        Page.Controls.setVisibility(controlId.PRESETS_MOVEMENT, !isFixed!);\r\n        Page.Controls.setVisibility(controlId.DISTANCE_FROM, !isFixed);\r\n        Page.Controls.setVisibility(controlId.DISTANCE_TO, !isFixed);\r\n\r\n        for (const observer of observers.modeChange) {\r\n            observer(newMode);\r\n        }\r\n        restartRendering();\r\n    }\r\n}\r\napplyMode(Page.Tabs.getValues(controlId.MODE)[0] as Mode);\r\nPage.Tabs.addObserver(controlId.MODE, (v: string[]) => applyMode(v[0] as Mode));\r\n\r\nlet restriction: Restriction = Page.Picker.getValue(controlId.RESTRICTIONS) as Restriction;\r\nPage.Picker.addObserver(controlId.RESTRICTIONS, (v: string) => {\r\n    restriction = v as Restriction;\r\n    clearPresetFixed();\r\n    clearPresetMovement();\r\n    restartRendering();\r\n});\r\n\r\nPage.Canvas.Observers.canvasResize.push(() => {\r\n    recomputeSizeFactor();\r\n    restartRendering();\r\n});\r\nrecomputeNbPointsNeeded();\r\nrecomputeSizeFactor();\r\n\r\nexport {\r\n    Mode,\r\n    Parameters,\r\n    Theme,\r\n};\r\n","import { Restriction } from \"./restriction\";\r\n\r\ninterface IPreset {\r\n    poles: number;\r\n    distance: number;\r\n    rotation: number;\r\n    restriction: Restriction;\r\n    scale: number;\r\n    intensity: number;\r\n}\r\n\r\nconst presets: IPreset[] = [];\r\npresets[0] = { // Sierpinski triangle\r\n    poles: 3,\r\n    distance: 0.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 1,\r\n    intensity: 0.01,\r\n};\r\npresets[1] = { // Cathedral\r\n    poles: 6,\r\n    distance: 0.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 0.75,\r\n    intensity: 0.03,\r\n};\r\npresets[2] = { // Wires: triangle\r\n    poles: 3,\r\n    distance: 1.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 3,\r\n    intensity: 0.08,\r\n};\r\npresets[3] = { // Pentagrams\r\n    poles: 5,\r\n    distance: 0.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 1,\r\n    intensity: 0.03,\r\n};\r\npresets[4] = { // Wires: cube\r\n    poles: 4,\r\n    distance: 0.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 0.8,\r\n    intensity: 0.01,\r\n};\r\npresets[5] = { // Hollow\r\n    poles: 4,\r\n    distance: 0.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_NEIGHBOUR_AFTER_REPEAT,\r\n    scale: 0.8,\r\n    intensity: 0.02,\r\n};\r\npresets[6] = { // T-Square\r\n    poles: 4,\r\n    distance: 1.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 2.5,\r\n    intensity: 0.07,\r\n};\r\npresets[7] = { // Stars\r\n    poles: 6,\r\n    distance: 0.57,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 1.2,\r\n    intensity: 0.03,\r\n};\r\npresets[8] = { // Infinite cubes\r\n    poles: 6,\r\n    distance: 1.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 2,\r\n    intensity: 0.2,\r\n};\r\npresets[9] = { // Crustaceans\r\n    poles: 4,\r\n    distance: 0.4,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 0.8,\r\n    intensity: 0.01,\r\n};\r\npresets[10] = { // Golden square\r\n    poles: 4,\r\n    distance: 1.618,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 3,\r\n    intensity: 0.4,\r\n};\r\npresets[11] = { // Starmap\r\n    poles: 5,\r\n    distance: 1.618,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 4,\r\n    intensity: 0.3,\r\n};\r\npresets[12] = { // Pythagoras tree\r\n    poles: 3,\r\n    distance: 1.618,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 4,\r\n    intensity: 0.15,\r\n};\r\npresets[13] = { // Monolith\r\n    poles: 4,\r\n    distance: 1.618,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 4,\r\n    intensity: 0.4,\r\n};\r\npresets[14] = { // Koch snowflake\r\n    poles: 6,\r\n    distance: 0.667,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 0.65,\r\n    intensity: 0.02,\r\n};\r\npresets[15] = { // Cabbage\r\n    poles: 5,\r\n    distance: 1.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_NEIGHBOUR_AFTER_REPEAT,\r\n    scale: 3,\r\n    intensity: 0.16,\r\n};\r\npresets[16] = { // Gecko\r\n    poles: 5,\r\n    distance: 1.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_NEIGHBOUR,\r\n    scale: 3,\r\n    intensity: 0.07,\r\n};\r\npresets[17] = { // Hubs\r\n    poles: 7,\r\n    distance: 1.445,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_DOUBLE_REPEAT,\r\n    scale: 1.5,\r\n    intensity: 0.2,\r\n};\r\npresets[18] = { // Sierpinski carpet\r\n    poles: 4,\r\n    distance: 0.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_DOUBLE_REPEAT,\r\n    scale: 0.75,\r\n    intensity: 0.03,\r\n};\r\npresets[19] = { // Forest\r\n    poles: 3,\r\n    distance: 0.386,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_RIGHT_NEIGHBOUR,\r\n    scale: 1,\r\n    intensity: 0.03,\r\n};\r\npresets[20] = { // Triangles\r\n    poles: 3,\r\n    distance: 1.755,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 4,\r\n    intensity: 1,\r\n};\r\npresets[21] = { // Spirals\r\n    poles: 3,\r\n    distance: 1.647,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_RIGHT_NEIGHBOUR,\r\n    scale: 1,\r\n    intensity: 0.05,\r\n};\r\n\r\nfunction getPreset(id: number): IPreset {\r\n    return presets[id];\r\n}\r\n\r\nexport {\r\n    getPreset,\r\n    IPreset,\r\n};\r\n","import { Restriction } from \"./restriction\";\r\n\r\ninterface IPreset {\r\n    poles: number;\r\n    distanceFrom: number;\r\n    distanceTo: number;\r\n    rotation: number;\r\n    restriction: Restriction;\r\n    scale: number;\r\n    intensity: number;\r\n}\r\n\r\nconst presets: IPreset[] = [];\r\npresets[0] = { // Triangle outer\r\n    poles: 3,\r\n    distanceFrom: 1,\r\n    distanceTo: 1.6,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 3,\r\n    intensity: 0.1,\r\n};\r\npresets[1] = { // Pentagon inner\r\n    poles: 5,\r\n    distanceFrom: 0.5,\r\n    distanceTo: 1,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 1,\r\n    intensity: 0.1,\r\n};\r\npresets[2] = { // Palms\r\n    poles: 6,\r\n    distanceFrom: 1,\r\n    distanceTo: 1.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 2.5,\r\n    intensity: 0.1,\r\n};\r\npresets[3] = { // Triangle side\r\n    poles: 3,\r\n    distanceFrom: 1,\r\n    distanceTo: 1.7,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_RIGHT_NEIGHBOUR,\r\n    scale: 3,\r\n    intensity: 0.175,\r\n};\r\npresets[4] = { // Star\r\n    poles: 5,\r\n    distanceFrom: 0.265,\r\n    distanceTo: 1.65,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_NEIGHBOUR,\r\n    scale: 3,\r\n    intensity: 0.25,\r\n};\r\n\r\nfunction getPreset(id: number): IPreset {\r\n    return presets[id];\r\n}\r\n\r\nexport {\r\n    getPreset,\r\n    IPreset,\r\n};\r\n","import { Parameters } from \"./parameters\";\r\n\r\nenum Restriction {\r\n    NONE = \"none\", // no restriction\r\n    NO_REPEAT = \"no-repeat\", // not the same twice in a row\r\n    NO_DOUBLE_REPEAT = \"no-double-repeat\", // not the same 3 times in a row,\r\n    NO_NEIGHBOUR = \"no-neighbour\", // not a neighbour of previous\r\n    NO_NEIGHBOUR_AFTER_REPEAT = \"no-neighbour-after-repeat\", // no neighbour of previous if last 2 were the same\r\n    NO_RIGHT_NEIGHBOUR = \"no-right-neighbour\", // not the right neighbour of previous\r\n}\r\n\r\ntype ChooseFunction = (nbPoles: number) => number;\r\n\r\nfunction getChooseFunction(): ChooseFunction {\r\n    switch (Parameters.restriction) {\r\n        case Restriction.NONE:\r\n            return chooseAny;\r\n        case Restriction.NO_REPEAT:\r\n            return chooseNoRepeat;\r\n        case Restriction.NO_DOUBLE_REPEAT:\r\n            return chooseNoDoubleRepeat;\r\n        case Restriction.NO_NEIGHBOUR:\r\n            return chooseNoNeighbour;\r\n        case Restriction.NO_NEIGHBOUR_AFTER_REPEAT:\r\n            return chooseNoNeighbourAfterRepeat;\r\n        case Restriction.NO_RIGHT_NEIGHBOUR:\r\n            return chooseNoRightNeighbour;\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nlet lastChoice: number = -1;\r\nlet lastChoices: number[] = [-1, -1];\r\nlet lastIndex: number = 0;\r\n\r\nfunction clearHistory() {\r\n    lastChoice = -1;\r\n    lastChoices = [-1, -1];\r\n    lastIndex = 0;\r\n}\r\n\r\nfunction chooseAny(nbPoles: number): number {\r\n    return Math.floor(nbPoles * Math.random());\r\n}\r\n\r\nfunction chooseNoRepeat(nbPoles: number): number {\r\n    let pole: number;\r\n\r\n    do {\r\n        pole = chooseAny(nbPoles);\r\n    } while (pole === lastChoice);\r\n\r\n    lastChoice = pole;\r\n    return pole;\r\n}\r\n\r\nfunction chooseNoDoubleRepeat(nbPoles: number): number {\r\n    let pole: number;\r\n\r\n    const oneRepeatAlready = (lastChoices[0] === lastChoices[1]);\r\n    do {\r\n        pole = chooseAny(nbPoles);\r\n    } while (oneRepeatAlready && lastChoices[0] === pole);\r\n\r\n    lastIndex = (lastIndex + 1) % 2;\r\n    lastChoices[lastIndex] = pole;\r\n\r\n    return pole;\r\n}\r\n\r\nfunction chooseNoNeighbour(nbPoles: number): number {\r\n    let pole: number;\r\n\r\n    do {\r\n        pole = chooseAny(nbPoles);\r\n    } while (((pole + 1) % nbPoles) === lastChoice || ((pole + nbPoles - 1) % nbPoles) === lastChoice);\r\n\r\n    lastChoice = pole;\r\n    return pole;\r\n}\r\n\r\nfunction chooseNoNeighbourAfterRepeat(nbPoles: number): number {\r\n    let pole: number;\r\n\r\n    const oneRepeatAlready = (lastChoices[0] === lastChoices[1]);\r\n    do {\r\n        pole = chooseAny(nbPoles);\r\n    } while (oneRepeatAlready &&\r\n        (((pole + 1) % nbPoles) === lastChoices[0] || ((pole + nbPoles - 1) % nbPoles) === lastChoices[0]));\r\n\r\n    lastIndex = (lastIndex + 1) % 2;\r\n    lastChoices[lastIndex] = pole;\r\n\r\n    return pole;\r\n}\r\n\r\nfunction chooseNoRightNeighbour(nbPoles: number): number {\r\n    let pole: number;\r\n\r\n    do {\r\n        pole = chooseAny(nbPoles);\r\n    } while (((pole + 1) % nbPoles) === lastChoice);\r\n\r\n    lastChoice = pole;\r\n    return pole;\r\n}\r\n\r\nexport {\r\n    clearHistory,\r\n    getChooseFunction,\r\n\r\n    Restriction,\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(633);\n"],"names":["gl","fillData","Float32Array","_pointsVBO","FLOAT","_viewCenter","Page","Canvas","Observers","mouseDrag","push","dX","dY","aspectRatio","getAspectRatio","Parameters","scale","resetViewObservers","recomputePolesPositions","poles","_shader","ShaderManager","buildShader","fragmentFilename","vertexFilename","injected","shader","freeGLResources","this","draw","nbPoints","distance","quality","isReadyToDraw","pointsSets","computeXPoints","setData","data","a","VBO","use","bindAttributes","strength","sets","pointsSet","u","value","color","bindUniforms","drawArrays","POINTS","from","size","nbPoles","point","dAngle","Math","PI","startingAngle","centerY","sin","floor","i","angle","relative","cos","N","Attractors","clearHistory","nextPos","choosePole","getChooseFunction","pos","random","rotationTheta","rotation","rotationMatrix00","rotationMatrix10","rotationMatrix01","rotationMatrix11","pole","result","colors","maxSizePerPole","iP","index","curr","MAX_POINTS_PER_STEP","pow","ChaosGame","hue","r","g","b","game","canvas","getCanvas","handler","mode","Mode","FIXED","DrawingHandlers","fixed","movement","nbPointsNeeded","computeTotalPointsNeeded","message","toLocaleString","confirm","manuallyTriggerCanvasResizeEvent","canvasSize","getSize","canvasResize","func","restoreCanvas","style","position","width","height","showLoader","setLoaderText","GLCanvas","adjustSize","setFullCanvas","clear","COLOR_BUFFER_BIT","reset","needsToKeepDrawing","drawStep","downloadedName","msToBlob","blob","window","navigator","msSaveBlob","toBlob","link","document","createElement","download","href","URL","createObjectURL","click","_totalPointsDrawn","nbPointsToDraw","min","sizeFactor","computeSizeFactor","DrawingHandlerFixed","computeTotalPointsNeededInternal","exactValue","ceil","_distance","distanceFrom","_pointsNeededPerDistanceUnit","DrawingModeMovement","computePointsPerDistanceUnit","_distanceGap","maxDistancePerStep","distanceTo","potentialMaxPointsPerStep","_distancePerStep","finalDistanceAfterThisStep","drawDistanceGap","pointsPerDistanceUnit","totalDistance","distanceGap","DrawingHandlerPreview","Base","fixedMode","movementMode","previewMode","preview","initGL","flags","setError","Demopage","setErrorMessage","getContext","disable","CULL_FACE","DEPTH_TEST","BLEND","clearColor","hidpi","cssPixel","devicePixelRatio","clientWidth","clientHeight","_gl","GLResource","cachedShaders","infos","callback","sourcesPending","sourcesFailed","loadedSource","success","processSource","source","replace","match","name","vert","ShaderSources","getSource","frag","processedVert","processedFrag","loadSource","getShader","registerShader","callAndClearCallbacks","cached","callbacks","cachedCallback","failed","pending","builtShader","deleteShader","cachedSources","filename","text","XMLHttpRequest","open","onload","readyState","status","responseText","console","error","statusText","onerror","send","notImplemented","location","alert","types","str","binder","uniform2fv","uniform3fv","uniform4fv","uniform2iv","uniform3iv","uniform4iv","uniform1i","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","unitNb","activeTexture","bindTexture","TEXTURE_2D","TEXTURE_CUBE_MAP","Array","isArray","uniform1iv","uniform1fv","uniform1f","vertexSource","fragmentSource","createShader","type","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","id","uCount","aCount","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","introspection","getProgramInfoLog","deleteProgram","useProgram","currTextureUnitNb","Object","keys","forEach","uName","uniform","loc","aName","attribute","bind","bindUniformsAndAttributes","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","ShaderProgram","Usage","array","staticUsage","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","DYNAMIC_DRAW","normalize","stride","offset","usage","STATIC","DYNAMIC","createQuad","minX","minY","maxX","maxY","deleteBuffer","enableVertexAttribArray","vertexAttribPointer","left","lower","viewport","drawingBufferWidth","drawingBufferHeight","set","Viewport","alpha","antialias","depth","preserveDrawingBuffer","enable","blendFunc","ONE","presetFixed","presetMovement","needToClearCanvas","lockedCanvas","clearObservers","downloadObservers","wantedSize","totalPoints","drawingHandler","setTotalPoints","total","setIndicatorText","firstDraw","requestAnimationFrame","mainLoop","theme","Theme","LIGHT","blendEquation","FUNC_REVERSE_SUBTRACT","FUNC_ADD","isMouseDown","totalPointsDrawn","main","clamp","x","minVal","maxVal","max","controlId","callObservers","observersList","observer","observers","FileControl","addDownloadObserver","Tabs","getValues","Button","addObserver","recomputeNbPointsNeeded","newValue","intensity","needToRedraw","MOVEMENT","restartRendering","recomputeSizeFactor","s","MIN_SCALE","MAX_SCALE","Range","setValue","getValue","d","c","Checkbox","setChecked","p","Picker","applyPresetFixed","applyPresetMovement","q","restriction","mouseWheel","delta","zoomCenter","newScale","setTheme","t","v","isChecked","checked","presetFixedId","clearPresetFixed","newPresetId","preset","PresetsFixed","getPreset","presetMovementId","clearPresetMovement","PresetsMovement","df","dt","applyMode","newMode","presetId","isFixed","Controls","setVisibility","presets","Restriction","NONE","NO_REPEAT","NO_NEIGHBOUR_AFTER_REPEAT","NO_NEIGHBOUR","NO_DOUBLE_REPEAT","NO_RIGHT_NEIGHBOUR","chooseAny","chooseNoRepeat","chooseNoDoubleRepeat","chooseNoNeighbour","chooseNoNeighbourAfterRepeat","chooseNoRightNeighbour","lastChoice","lastChoices","lastIndex","oneRepeatAlready","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}