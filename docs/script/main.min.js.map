{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/parameters.ts","webpack:///./src/ts/gl-utils/gl-canvas.ts","webpack:///./src/ts/drawing-handlers/drawing-handler-base.ts","webpack:///./src/ts/chaos-game.ts","webpack:///./src/ts/gl-utils/gl-resource.ts","webpack:///./src/ts/restriction.ts","webpack:///./src/ts/gl-utils/viewport.ts","webpack:///./src/ts/drawing-handlers/drawing-handlers.ts","webpack:///./src/ts/main.ts","webpack:///./src/ts/gl-utils/shader-manager.ts","webpack:///./src/ts/gl-utils/shader.ts","webpack:///./src/ts/gl-utils/shader-sources.ts","webpack:///./src/ts/gl-utils/vbo.ts","webpack:///./src/ts/colors.ts","webpack:///./src/ts/presets-fixed.ts","webpack:///./src/ts/presets-movement.ts","webpack:///./src/ts/downloader.ts","webpack:///./src/ts/drawing-handlers/drawing-handler-fixed.ts","webpack:///./src/ts/drawing-handlers/drawing-handler-movement.ts","webpack:///./src/ts/drawing-handlers/drawing-handler-preview.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Theme","clamp","x","minVal","maxVal","Math","min","max","controlId","callObservers","observersList","observer","Mode","observers","Page","FileControl","addDownloadObserver","size","Tabs","getValues","Button","addObserver","Canvas","Observers","mouseDrag","push","nbPointsNeeded","recomputeNbPointsNeeded","newValue","intensity","quality","needToRedraw","MOVEMENT","restartRendering","sizeFactor","recomputeSizeFactor","canvasSize","getSize","Parameters","computeSizeFactor","scale","MIN_SCALE","MAX_SCALE","Range","setValue","getValue","theme","colors","Checkbox","setChecked","Picker","FIXED","applyPresetFixed","applyPresetMovement","poles","q","distance","distanceFrom","distanceTo","rotation","restriction","mouseWheel","delta","zoomCenter","newScale","setTheme","v","isChecked","checked","presetFixedId","clearPresetFixed","newPresetId","preset","PresetsFixed","getPreset","presetMovementId","clearPresetMovement","PresetsMovement","df","dt","applyMode","newMode","presetId","isFixed","Controls","setVisibility","canvasResize","gl","initGL","flags","setError","message","Demopage","setErrorMessage","canvas","getCanvas","getContext","disable","CULL_FACE","DEPTH_TEST","BLEND","clearColor","adjustSize","hidpi","cssPixel","window","devicePixelRatio","width","floor","clientWidth","height","clientHeight","DrawingHandlerBase","fillData","Float32Array","_pointsVBO","FLOAT","_viewCenter","dX","dY","aspectRatio","getAspectRatio","resetViewObservers","recomputePolesPositions","_shader","ShaderManager","buildShader","fragmentFilename","vertexFilename","injected","shader","freeGLResources","this","draw","nbPoints","isReadyToDraw","pointsSets","computeXPoints","setData","data","a","VBO","use","bindAttributes","strength","sets","pointsSet","u","color","bindUniforms","drawArrays","POINTS","from","nbPoles","point","dAngle","PI","startingAngle","centerY","sin","angle","absolute","cos","relative","N","Attractors","clearHistory","choosePole","getChooseFunction","pos","random","nextPos","rotationTheta","rotationMatrix00","rotationMatrix10","rotationMatrix01","rotationMatrix11","pole","result","maxSizePerPole","iP","index","curr","MAX_POINTS_PER_STEP","pow","ChaosGame","_gl","GLResource","Restriction","NONE","chooseAny","NO_REPEAT","chooseNoRepeat","NO_DOUBLE_REPEAT","chooseNoDoubleRepeat","NO_NEIGHBOUR","chooseNoNeighbour","NO_NEIGHBOUR_AFTER_REPEAT","chooseNoNeighbourAfterRepeat","NO_RIGHT_NEIGHBOUR","chooseNoRightNeighbour","lastChoice","lastChoices","lastIndex","oneRepeatAlready","left","lower","setFullCanvas","viewport","drawingBufferWidth","drawingBufferHeight","set","Viewport","Base","fixedMode","fixed","movementMode","movement","previewMode","preview","GLCanvas","alpha","antialias","depth","preserveDrawingBuffer","enable","blendFunc","ONE","showLoader","presetFixed","presetMovement","needToClearCanvas","lockedCanvas","clearObservers","downloadObservers","wantedSize","game","totalPoints","drawingHandler","setTotalPoints","total","setIndicatorText","toLocaleString","firstDraw","requestAnimationFrame","mainLoop","LIGHT","blendEquation","FUNC_REVERSE_SUBTRACT","FUNC_ADD","clear","COLOR_BUFFER_BIT","DrawingHandlers","reset","isMouseDown","drawStep","totalPointsDrawn","needsToKeepDrawing","main","cachedShaders","infos","callback","sourcesPending","sourcesFailed","loadedSource","success","processSource","source","replace","match","vert","ShaderSources","getSource","frag","processedVert","processedFrag","loadSource","getShader","registerShader","callAndClearCallbacks","cached","callbacks","cachedCallback","failed","pending","builtShader","deleteShader","notImplemented","location","alert","types","str","binder","uniform2fv","uniform3fv","uniform4fv","uniform2iv","uniform3iv","uniform4iv","uniform1i","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","unitNb","activeTexture","bindTexture","TEXTURE_2D","TEXTURE_CUBE_MAP","Array","isArray","uniform1iv","uniform1fv","uniform1f","vertexSource","fragmentSource","createShader","type","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","id","uCount","aCount","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","introspection","getProgramInfoLog","deleteProgram","useProgram","currTextureUnitNb","keys","forEach","uName","uniform","loc","aName","attribute","bindUniformsAndAttributes","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","ShaderProgram","cachedSources","filename","text","XMLHttpRequest","open","onload","readyState","status","responseText","statusText","onerror","send","Usage","array","staticUsage","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","DYNAMIC_DRAW","normalize","stride","offset","usage","STATIC","DYNAMIC","createQuad","minX","minY","maxX","maxY","deleteBuffer","enableVertexAttribArray","vertexAttribPointer","hue","g","b","presets","handler","computeTotalPointsNeeded","confirm","manuallyTriggerCanvasResizeEvent","func","restoreCanvas","style","position","setLoaderText","msToBlob","blob","navigator","msSaveBlob","toBlob","link","document","createElement","download","href","URL","createObjectURL","click","_totalPointsDrawn","nbPointsToDraw","DrawingHandlerFixed","computeTotalPointsNeededInternal","exactValue","ceil","_distance","_pointsNeededPerDistanceUnit","DrawingModeMovement","computePointsPerDistanceUnit","_distanceGap","maxDistancePerStep","potentialMaxPointsPerStep","_distancePerStep","finalDistanceAfterThisStep","drawDistanceGap","pointsPerDistanceUnit","totalDistance","distanceGap","DrawingHandlerPreview"],"mappings":"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","file":"main.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","import * as PresetsFixed from \"./presets-fixed\";\r\nimport * as PresetsMovement from \"./presets-movement\";\r\nimport { Restriction } from \"./restriction\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nfunction clamp(x: number, minVal: number, maxVal: number): number {\r\n    return Math.min(maxVal, Math.max(minVal, x));\r\n}\r\n\r\nenum Theme {\r\n    DARK = \"dark\",\r\n    LIGHT = \"light\",\r\n}\r\n\r\n/* === IDs ============================================================ */\r\nconst controlId = {\r\n    MODE: \"mode\",\r\n    PRESETS_FIXED: \"presets-fixed-picker-id\",\r\n    PRESETS_MOVEMENT: \"presets-movement-picker-id\",\r\n    POLES: \"poles-range-id\",\r\n    DISTANCE: \"distance-range-id\",\r\n    DISTANCE_FROM: \"distance-from-range-id\",\r\n    DISTANCE_TO: \"distance-to-range-id\",\r\n    ROTATION: \"rotation-range-id\",\r\n    FORBID_REPEAT: \"forbid-repeat-checkbox-id\",\r\n    RESTRICTIONS: \"restrictions-picker-id\",\r\n\r\n    INTENSITY: \"intensity-range-id\",\r\n    QUALITY: \"quality-range-id\",\r\n    THEME: \"theme\",\r\n    COLORS: \"colors-checkbox-id\",\r\n    RESET: \"reset-button-id\",\r\n\r\n    RESULT_SIZE: \"result-dimensions\",\r\n    DOWNLOAD: \"result-download-id\",\r\n};\r\n\r\n/* === OBSERVERS ====================================================== */\r\ntype DownloadObserver = (size: number) => void;\r\ntype GenericObserver = () => void;\r\ntype ModeChangeObserver = (newMode: Mode) => void;\r\n\r\nfunction callObservers(observersList: any[]): void {\r\n    for (const observer of observersList) {\r\n        observer();\r\n    }\r\n}\r\n\r\nconst observers: {\r\n    clear: GenericObserver[],\r\n    download: DownloadObserver[],\r\n    modeChange: ModeChangeObserver[],\r\n    resetView: GenericObserver[],\r\n} = {\r\n    clear: [],\r\n    download: [],\r\n    modeChange: [],\r\n    resetView: [],\r\n};\r\n\r\nenum Mode {\r\n    FIXED = \"fixed\",\r\n    MOVEMENT = \"movement\",\r\n}\r\n\r\nPage.FileControl.addDownloadObserver(controlId.DOWNLOAD, () => {\r\n    const size = +Page.Tabs.getValues(controlId.RESULT_SIZE)[0];\r\n    for (const observer of observers.download) {\r\n        observer(size);\r\n    }\r\n});\r\n\r\nPage.Button.addObserver(controlId.RESET, () => callObservers(observers.clear));\r\nPage.Canvas.Observers.mouseDrag.push(() => callObservers(observers.clear));\r\n\r\nlet nbPointsNeeded: number = 0;\r\nfunction recomputeNbPointsNeeded() {\r\n    const newValue = intensity * (quality + 0.1);\r\n    const needToRedraw = (mode === Mode.MOVEMENT) || (newValue < nbPointsNeeded);\r\n    nbPointsNeeded = newValue;\r\n\r\n    if (needToRedraw) {\r\n        restartRendering();\r\n    }\r\n}\r\n\r\nlet sizeFactor: number = 0;\r\nfunction recomputeSizeFactor() {\r\n    const canvasSize = Page.Canvas.getSize();\r\n    sizeFactor = Parameters.computeSizeFactor(canvasSize);\r\n}\r\n\r\n/* === INTERFACE ====================================================== */\r\nabstract class Parameters {\r\n    public static get scale(): number {\r\n        return scale;\r\n    }\r\n    public static set scale(s: number) {\r\n        scale = clamp(s, MIN_SCALE, MAX_SCALE);\r\n        callObservers(observers.clear);\r\n    }\r\n\r\n    public static computeSizeFactor(canvasSize: number[]): number {\r\n        const minSide = Math.min(canvasSize[0], canvasSize[1]);\r\n        return minSide / scale;\r\n    }\r\n    public static get sizeFactor(): number {\r\n        return sizeFactor;\r\n    }\r\n\r\n    public static get nbPointsNeeded(): number {\r\n        return nbPointsNeeded;\r\n    }\r\n\r\n    public static get intensity(): number {\r\n        return intensity;\r\n    }\r\n    public static set intensity(i: number) {\r\n        Page.Range.setValue(controlId.INTENSITY, i);\r\n        intensity = Page.Range.getValue(controlId.INTENSITY);\r\n        recomputeNbPointsNeeded();\r\n    }\r\n\r\n    public static get quality(): number {\r\n        return quality;\r\n    }\r\n    public static set quality(d: number) {\r\n        quality = d;\r\n        Page.Range.setValue(controlId.QUALITY, quality);\r\n    }\r\n\r\n    public static get theme(): Theme {\r\n        return theme;\r\n    }\r\n\r\n    public static get colors(): boolean {\r\n        return colors;\r\n    }\r\n    public static set colors(c: boolean) {\r\n        colors = c;\r\n        Page.Checkbox.setChecked(controlId.COLORS, c);\r\n    }\r\n\r\n    public static get mode(): Mode {\r\n        return mode;\r\n    }\r\n    public static get modeChangeObservers(): ModeChangeObserver[] {\r\n        return observers.modeChange;\r\n    }\r\n\r\n    public static set presetFixed(p: number) {\r\n        Page.Picker.setValue(controlId.PRESETS_FIXED, \"\" + p);\r\n        if (mode === Mode.FIXED) {\r\n            applyPresetFixed(p);\r\n        }\r\n    }\r\n\r\n    public static set presetMovement(p: number) {\r\n        Page.Picker.setValue(controlId.PRESETS_MOVEMENT, \"\" + p);\r\n        if (mode === Mode.MOVEMENT) {\r\n            applyPresetMovement(p);\r\n        }\r\n    }\r\n\r\n    public static get poles(): number {\r\n        return poles;\r\n    }\r\n    public static set poles(q: number) {\r\n        poles = q;\r\n        Page.Range.setValue(controlId.POLES, poles);\r\n        callObservers(observers.clear);\r\n    }\r\n\r\n    public static get distance(): number {\r\n        return distance;\r\n    }\r\n    public static set distance(d: number) {\r\n        distance = d;\r\n        Page.Range.setValue(controlId.DISTANCE, d);\r\n    }\r\n\r\n    public static get distanceFrom(): number {\r\n        return Math.min(distanceFrom, distanceTo);\r\n    }\r\n    public static set distanceFrom(d: number) {\r\n        distanceFrom = d;\r\n        Page.Range.setValue(controlId.DISTANCE_FROM, d);\r\n    }\r\n\r\n    public static get distanceTo(): number {\r\n        return Math.max(distanceFrom, distanceTo);\r\n    }\r\n    public static set distanceTo(d: number) {\r\n        distanceTo = d;\r\n        Page.Range.setValue(controlId.DISTANCE_TO, d);\r\n    }\r\n\r\n    public static get rotation(): number {\r\n        return rotation;\r\n    }\r\n    public static set rotation(r: number) {\r\n        rotation = r;\r\n        Page.Range.setValue(controlId.ROTATION, r);\r\n    }\r\n\r\n    public static get restriction(): Restriction {\r\n        return restriction;\r\n    }\r\n    public static set restriction(r: Restriction) {\r\n        restriction = r;\r\n        Page.Picker.setValue(controlId.RESTRICTIONS, r);\r\n    }\r\n\r\n    public static get downloadObservers(): DownloadObserver[] {\r\n        return observers.download;\r\n    }\r\n\r\n    public static get clearObservers(): GenericObserver[] {\r\n        return observers.clear;\r\n    }\r\n\r\n    public static get resetViewObservers(): GenericObserver[] {\r\n        return observers.resetView;\r\n    }\r\n}\r\n\r\n/* === EVENTS BINDING ================================================= */\r\n/* --- RENDERING ------------------------------------------------------ */\r\nfunction restartRendering() {\r\n    callObservers(observers.clear);\r\n}\r\n\r\nlet scale = 1.0;\r\nconst MIN_SCALE = 0.05; // should be > 0\r\nconst MAX_SCALE = 6.0;\r\nPage.Canvas.Observers.mouseWheel.push((delta: number, zoomCenter: number[]) => {\r\n    const newScale = clamp(scale * (1 + 0.2 * delta), MIN_SCALE, MAX_SCALE);\r\n\r\n    if (newScale !== scale) {\r\n        scale = newScale;\r\n        recomputeSizeFactor();\r\n        restartRendering();\r\n    }\r\n});\r\n\r\nlet intensity: number = Page.Range.getValue(controlId.INTENSITY);\r\nPage.Range.addObserver(controlId.INTENSITY, (i: number) => {\r\n    intensity = i;\r\n    recomputeNbPointsNeeded();\r\n});\r\n\r\nlet quality: number = Page.Range.getValue(controlId.QUALITY);\r\nPage.Range.addObserver(controlId.QUALITY, (q: number) => {\r\n    quality = q;\r\n    recomputeNbPointsNeeded();\r\n    restartRendering();\r\n});\r\n\r\nlet theme: Theme;\r\nfunction setTheme(t: Theme) {\r\n    theme = t;\r\n    restartRendering();\r\n}\r\nsetTheme(Page.Tabs.getValues(controlId.THEME)[0] as Theme);\r\nPage.Tabs.addObserver(controlId.THEME, (v: string[]) => setTheme(v[0] as Theme));\r\n\r\nlet colors: boolean = Page.Checkbox.isChecked(controlId.COLORS);\r\nPage.Checkbox.addObserver(controlId.COLORS, (checked: boolean) => {\r\n    colors = checked;\r\n    restartRendering();\r\n});\r\n\r\n/* --- PARAMETERS ----------------------------------------------------- */\r\nlet presetFixedId: number = -1;\r\nfunction clearPresetFixed() {\r\n    if (presetFixedId >= 0) {\r\n        presetFixedId = -1;\r\n        Page.Picker.setValue(controlId.PRESETS_FIXED, null);\r\n    }\r\n}\r\nfunction applyPresetFixed(newPresetId: number) {\r\n    if (newPresetId >= 0) {\r\n        presetFixedId = newPresetId;\r\n        const preset = PresetsFixed.getPreset(newPresetId);\r\n\r\n        Parameters.poles = preset.poles;\r\n        Parameters.distance = preset.distance;\r\n        Parameters.rotation = preset.rotation;\r\n        Parameters.restriction = preset.restriction;\r\n        Parameters.scale = preset.scale;\r\n        Parameters.intensity = preset.intensity;\r\n        restartRendering();\r\n        callObservers(observers.resetView);\r\n    }\r\n}\r\nPage.Picker.addObserver(controlId.PRESETS_FIXED, (v: string) => {\r\n    if (v === null) {\r\n        presetFixedId = -1;\r\n    } else {\r\n        applyPresetFixed(+v);\r\n    }\r\n});\r\napplyPresetFixed(+Page.Picker.getValue(controlId.PRESETS_FIXED));\r\n\r\nlet presetMovementId: number = -1;\r\nfunction clearPresetMovement() {\r\n    if (presetMovementId >= 0) {\r\n        presetMovementId = -1;\r\n        Page.Picker.setValue(controlId.PRESETS_MOVEMENT, null);\r\n    }\r\n}\r\nfunction applyPresetMovement(newPresetId: number) {\r\n    if (newPresetId >= 0) {\r\n        presetMovementId = newPresetId;\r\n        const preset = PresetsMovement.getPreset(newPresetId);\r\n\r\n        Parameters.poles = preset.poles;\r\n        Parameters.distanceFrom = preset.distanceFrom;\r\n        Parameters.distanceTo = preset.distanceTo;\r\n        Parameters.rotation = preset.rotation;\r\n        Parameters.restriction = preset.restriction;\r\n        Parameters.scale = preset.scale;\r\n        Parameters.intensity = preset.intensity;\r\n        restartRendering();\r\n        callObservers(observers.resetView);\r\n    }\r\n}\r\nPage.Picker.addObserver(controlId.PRESETS_MOVEMENT, (v: string) => {\r\n    if (v === null) {\r\n        presetMovementId = -1;\r\n    } else {\r\n        applyPresetMovement(+v);\r\n    }\r\n});\r\napplyPresetMovement(+Page.Picker.getValue(controlId.PRESETS_MOVEMENT));\r\n\r\nlet poles: number = Page.Range.getValue(controlId.POLES);\r\nPage.Range.addObserver(controlId.POLES, (p: number) => {\r\n    poles = p;\r\n    clearPresetFixed();\r\n    clearPresetMovement();\r\n    restartRendering();\r\n    callObservers(observers.resetView);\r\n});\r\n\r\nlet distance: number = Page.Range.getValue(controlId.DISTANCE);\r\nPage.Range.addObserver(controlId.DISTANCE, (d: number) => {\r\n    distance = d;\r\n    clearPresetFixed();\r\n    restartRendering();\r\n});\r\n\r\nlet distanceFrom: number = Page.Range.getValue(controlId.DISTANCE_FROM);\r\nPage.Range.addObserver(controlId.DISTANCE_FROM, (df: number) => {\r\n    distanceFrom = df;\r\n    clearPresetMovement();\r\n    restartRendering();\r\n});\r\n\r\nlet distanceTo: number = Page.Range.getValue(controlId.DISTANCE_TO);\r\nPage.Range.addObserver(controlId.DISTANCE_TO, (dt: number) => {\r\n    distanceTo = dt;\r\n    clearPresetMovement();\r\n    restartRendering();\r\n});\r\n\r\nlet rotation: number = Page.Range.getValue(controlId.ROTATION);\r\nPage.Range.addObserver(controlId.ROTATION, (r: number) => {\r\n    rotation = r;\r\n    clearPresetFixed();\r\n    clearPresetMovement();\r\n    restartRendering();\r\n});\r\n\r\nlet mode: Mode;\r\nfunction applyMode(newMode: Mode): void {\r\n    if (newMode !== mode) {\r\n        mode = newMode;\r\n\r\n        const isFixed: boolean = mode === Mode.FIXED;\r\n        if (isFixed) {\r\n            const presetId = Page.Picker.getValue(controlId.PRESETS_FIXED);\r\n            if (presetId) {\r\n                applyPresetFixed(+presetId);\r\n            }\r\n        } else {\r\n            const presetId = Page.Picker.getValue(controlId.PRESETS_MOVEMENT);\r\n            if (presetId) {\r\n                applyPresetMovement(+presetId);\r\n            }\r\n        }\r\n\r\n        Page.Controls.setVisibility(controlId.PRESETS_FIXED, isFixed);\r\n        Page.Controls.setVisibility(controlId.DISTANCE, isFixed);\r\n\r\n        Page.Controls.setVisibility(controlId.PRESETS_MOVEMENT, !isFixed!);\r\n        Page.Controls.setVisibility(controlId.DISTANCE_FROM, !isFixed);\r\n        Page.Controls.setVisibility(controlId.DISTANCE_TO, !isFixed);\r\n\r\n        for (const observer of observers.modeChange) {\r\n            observer(newMode);\r\n        }\r\n        restartRendering();\r\n    }\r\n}\r\napplyMode(Page.Tabs.getValues(controlId.MODE)[0] as Mode);\r\nPage.Tabs.addObserver(controlId.MODE, (v: string[]) => applyMode(v[0] as Mode));\r\n\r\nlet restriction: Restriction = Page.Picker.getValue(controlId.RESTRICTIONS) as Restriction;\r\nPage.Picker.addObserver(controlId.RESTRICTIONS, (v: string) => {\r\n    restriction = v as Restriction;\r\n    clearPresetFixed();\r\n    clearPresetMovement();\r\n    restartRendering();\r\n});\r\n\r\nPage.Canvas.Observers.canvasResize.push(() => {\r\n    recomputeSizeFactor();\r\n    restartRendering();\r\n});\r\nrecomputeNbPointsNeeded();\r\nrecomputeSizeFactor();\r\n\r\nexport {\r\n    Mode,\r\n    Parameters,\r\n    Theme,\r\n};\r\n","import \"../page-interface-generated\";\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags: any): boolean {\r\n    function setError(message: string) {\r\n        Page.Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Page.Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(\"Your browser or device only supports experimental WebGL.\\n\" +\r\n            \"The simulation may not run as expected.\");\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0, 0, 0, 1);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n\r\n    const canvas = gl.canvas as HTMLCanvasElement;\r\n\r\n    const width: number = Math.floor(canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(canvas.clientHeight * cssPixel);\r\n    if (canvas.width !== width || canvas.height !== height) {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","import ChaosGame from \"../chaos-game\";\r\n\r\nabstract class DrawingHandlerBase {\r\n    public abstract reset(): void;\r\n    public abstract drawStep(game: ChaosGame): void;\r\n\r\n    public abstract get needsToKeepDrawing(): boolean;\r\n    public abstract get totalPointsDrawn(): number;\r\n    public abstract computeTotalPointsNeeded(canvasSize: number[]): number;\r\n}\r\n\r\nexport default DrawingHandlerBase;\r\n","import { gl } from \"./gl-utils/gl-canvas\";\r\nimport GLResource from \"./gl-utils/gl-resource\";\r\nimport Shader from \"./gl-utils/shader\";\r\nimport * as ShaderManager from \"./gl-utils/shader-manager\";\r\nimport VBO from \"./gl-utils/vbo\";\r\n\r\nimport ColorFromHue from \"./colors\";\r\nimport { Parameters } from \"./parameters\";\r\n\r\nimport * as Attractors from \"./restriction\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\ninterface IPointsSet {\r\n    color: number[];\r\n    from: number;\r\n    size: number;\r\n}\r\n\r\ninterface IPointsSets {\r\n    data: Float32Array;\r\n    sets: IPointsSet[];\r\n}\r\n\r\nclass ChaosGame extends GLResource {\r\n    public static MAX_POINTS_PER_STEP = Math.pow(2, 18);\r\n    private _shader: Shader;\r\n    private _pointsVBO: VBO;\r\n\r\n    private _viewCenter: number[];\r\n\r\n    public constructor() {\r\n        super(gl);\r\n\r\n        const fillData = new Float32Array(2);\r\n        this._pointsVBO = new VBO(gl, fillData, 2, gl.FLOAT, false);\r\n\r\n        this._viewCenter = [0, 0];\r\n\r\n        Page.Canvas.Observers.mouseDrag.push((dX: number, dY: number) => {\r\n            const aspectRatio = Page.Canvas.getAspectRatio();\r\n            this._viewCenter[0] -= 2 * dX * Parameters.scale * aspectRatio;\r\n            this._viewCenter[1] += 2 * dY * Parameters.scale;\r\n        });\r\n\r\n        Parameters.resetViewObservers.push(() => {\r\n            this._viewCenter = [0, 0];\r\n        });\r\n\r\n        this.recomputePolesPositions(Parameters.poles);\r\n\r\n        this._shader = null;\r\n        ShaderManager.buildShader(\r\n            {\r\n                fragmentFilename: \"points.frag\",\r\n                vertexFilename: \"points.vert\",\r\n                injected: {},\r\n            },\r\n            (shader) => {\r\n                if (shader !== null) {\r\n                    this._shader = shader;\r\n                }\r\n            },\r\n        );\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        if (this._pointsVBO) {\r\n            this._pointsVBO.freeGLResources();\r\n            this._pointsVBO = null;\r\n        }\r\n\r\n        if (this._shader) {\r\n            this._shader.freeGLResources();\r\n            this._shader = null;\r\n        }\r\n    }\r\n\r\n    public get isReadyToDraw(): boolean {\r\n        return this._shader != null;\r\n    }\r\n\r\n    public draw(nbPoints: number, distance: number, quality: number): void {\r\n        if (this.isReadyToDraw) {\r\n            const pointsSets = this.computeXPoints(nbPoints, distance);\r\n            this._pointsVBO.setData(pointsSets.data);\r\n\r\n            /* tslint:disable:no-string-literal */\r\n            this._shader.a[\"aCoords\"].VBO = this._pointsVBO;\r\n\r\n            this._shader.use();\r\n            this._shader.bindAttributes();\r\n\r\n            const strength = 1 / (1 + 254 * quality);\r\n            for (const pointsSet of pointsSets.sets) {\r\n                this._shader.u[\"uColor\"].value = [\r\n                    pointsSet.color[0] * strength,\r\n                    pointsSet.color[1] * strength,\r\n                    pointsSet.color[2] * strength,\r\n                    1];\r\n                this._shader.bindUniforms();\r\n                gl.drawArrays(gl.POINTS, pointsSet.from, pointsSet.size);\r\n            }\r\n            /* tslint:enable:no-string-literal */\r\n        }\r\n    }\r\n\r\n    private recomputePolesPositions(nbPoles: number): Float32Array {\r\n        const aspectRatio = Page.Canvas.getAspectRatio();\r\n        const absoluteToViewport = (point: number[]) => [\r\n            ((point[0] - this._viewCenter[0]) / (Parameters.scale * aspectRatio)),\r\n            ((point[1] - this._viewCenter[1]) / Parameters.scale),\r\n        ];\r\n\r\n        const poles = new Float32Array(2 * nbPoles);\r\n\r\n        const dAngle = -2 * Math.PI / nbPoles;\r\n        const startingAngle = Math.PI / 2 + ((nbPoles + 1) % 2) * dAngle / 2;\r\n\r\n        /* May need to shift vertically in order to center the figure. */\r\n        const centerY = 0.5 * (Math.sin(startingAngle) + Math.sin(startingAngle + Math.floor(nbPoles / 2) * dAngle));\r\n\r\n        for (let i = 0; i < nbPoles; ++i) {\r\n            const angle = startingAngle + i * dAngle;\r\n\r\n            const absolute = [Math.cos(angle), Math.sin(angle) - centerY];\r\n            const relative = absoluteToViewport(absolute);\r\n            poles[2 * i + 0] = relative[0];\r\n            poles[2 * i + 1] = relative[1];\r\n        }\r\n\r\n        return poles;\r\n    }\r\n\r\n    private computeXPoints(N: number, distance: number): IPointsSets {\r\n        const nbPoles = Parameters.poles;\r\n\r\n        Attractors.clearHistory();\r\n        const choosePole = Attractors.getChooseFunction();\r\n\r\n        const poles: Float32Array = this.recomputePolesPositions(nbPoles);\r\n\r\n        /* Ignore the first N points because they might not be at the right place */\r\n        const pos = [2 * Math.random() - 1, 2 * Math.random() - 1];\r\n\r\n        function nextPosWithoutRotation(): number {\r\n            const pole = choosePole(nbPoles);\r\n            pos[0] += distance * (poles[2 * pole + 0] - pos[0]);\r\n            pos[1] += distance * (poles[2 * pole + 1] - pos[1]);\r\n            return pole;\r\n        }\r\n\r\n        const aspectRatio = Page.Canvas.getAspectRatio();\r\n        const rotationTheta = Parameters.rotation * 0.125 * Math.PI;\r\n        const rotationMatrix00 = Math.cos(rotationTheta) / aspectRatio;\r\n        const rotationMatrix10 = -Math.sin(rotationTheta) / aspectRatio;\r\n        const rotationMatrix01 = Math.sin(rotationTheta);\r\n        const rotationMatrix11 = Math.cos(rotationTheta);\r\n        function nextPosWithRotation(): number {\r\n            const pole = choosePole(nbPoles);\r\n            const dX = distance * (poles[2 * pole + 0] - pos[0]) * aspectRatio;\r\n            const dY = distance * (poles[2 * pole + 1] - pos[1]);\r\n            pos[0] += (dX * rotationMatrix00 + dY * rotationMatrix10);\r\n            pos[1] += dX * rotationMatrix01 + dY * rotationMatrix11;\r\n            return pole;\r\n        }\r\n\r\n        let nextPos: () => number;\r\n        if (Parameters.rotation !== 0) {\r\n            nextPos = nextPosWithRotation;\r\n        } else {\r\n            nextPos = nextPosWithoutRotation;\r\n        }\r\n\r\n        for (let i = 0; i < 500; ++i) {\r\n            nextPos();\r\n        }\r\n\r\n        const data = new Float32Array(2 * N);\r\n        const result = {\r\n            data,\r\n            sets: [],\r\n        };\r\n\r\n        if (Parameters.colors) {\r\n            const maxSizePerPole = Math.floor(N / nbPoles);\r\n\r\n            for (let i = 0; i < nbPoles; ++i) {\r\n                result.sets.push({\r\n                    color: ColorFromHue(i / nbPoles),\r\n                    from: i * maxSizePerPole,\r\n                    size: 0,\r\n                });\r\n            }\r\n\r\n            for (let iP = 0; iP < N; ++iP) {\r\n                const pole = nextPos();\r\n                if (result.sets[pole].size + 1 < maxSizePerPole) {\r\n                    const index = 2 * (result.sets[pole].from + result.sets[pole].size);\r\n                    result.data[index + 0] = pos[0];\r\n                    result.data[index + 1] = pos[1];\r\n                    result.sets[pole].size++;\r\n                }\r\n            }\r\n        } else {\r\n            result.sets.push({\r\n                color: [1, 1, 1],\r\n                from: 0,\r\n                size: N,\r\n            });\r\n\r\n            for (let iP = 0; iP < N; ++iP) {\r\n                nextPos();\r\n                const curr = 2 * iP;\r\n                result.data[curr + 0] = pos[0];\r\n                result.data[curr + 1] = pos[1];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default ChaosGame;\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport default GLResource;\r\n","import { Parameters } from \"./parameters\";\r\n\r\nenum Restriction {\r\n    NONE = \"none\", // no restriction\r\n    NO_REPEAT = \"no-repeat\", // not the same twice in a row\r\n    NO_DOUBLE_REPEAT = \"no-double-repeat\", // not the same 3 times in a row,\r\n    NO_NEIGHBOUR = \"no-neighbour\", // not a neighbour of previous\r\n    NO_NEIGHBOUR_AFTER_REPEAT = \"no-neighbour-after-repeat\", // no neighbour of previous if last 2 were the same\r\n    NO_RIGHT_NEIGHBOUR = \"no-right-neighbour\", // not the right neighbour of previous\r\n}\r\n\r\ntype ChooseFunction = (nbPoles: number) => number;\r\n\r\nfunction getChooseFunction(): ChooseFunction {\r\n    switch (Parameters.restriction) {\r\n        case Restriction.NONE:\r\n            return chooseAny;\r\n        case Restriction.NO_REPEAT:\r\n            return chooseNoRepeat;\r\n        case Restriction.NO_DOUBLE_REPEAT:\r\n            return chooseNoDoubleRepeat;\r\n        case Restriction.NO_NEIGHBOUR:\r\n            return chooseNoNeighbour;\r\n        case Restriction.NO_NEIGHBOUR_AFTER_REPEAT:\r\n            return chooseNoNeighbourAfterRepeat;\r\n        case Restriction.NO_RIGHT_NEIGHBOUR:\r\n            return chooseNoRightNeighbour;\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nlet lastChoice: number = -1;\r\nlet lastChoices: number[] = [-1, -1];\r\nlet lastIndex: number = 0;\r\n\r\nfunction clearHistory() {\r\n    lastChoice = -1;\r\n    lastChoices = [-1, -1];\r\n    lastIndex = 0;\r\n}\r\n\r\nfunction chooseAny(nbPoles: number): number {\r\n    return Math.floor(nbPoles * Math.random());\r\n}\r\n\r\nfunction chooseNoRepeat(nbPoles: number): number {\r\n    let pole: number;\r\n\r\n    do {\r\n        pole = chooseAny(nbPoles);\r\n    } while (pole === lastChoice);\r\n\r\n    lastChoice = pole;\r\n    return pole;\r\n}\r\n\r\nfunction chooseNoDoubleRepeat(nbPoles: number): number {\r\n    let pole: number;\r\n\r\n    const oneRepeatAlready = (lastChoices[0] === lastChoices[1]);\r\n    do {\r\n        pole = chooseAny(nbPoles);\r\n    } while (oneRepeatAlready && lastChoices[0] === pole);\r\n\r\n    lastIndex = (lastIndex + 1) % 2;\r\n    lastChoices[lastIndex] = pole;\r\n\r\n    return pole;\r\n}\r\n\r\nfunction chooseNoNeighbour(nbPoles: number): number {\r\n    let pole: number;\r\n\r\n    do {\r\n        pole = chooseAny(nbPoles);\r\n    } while (((pole + 1) % nbPoles) === lastChoice || ((pole + nbPoles - 1) % nbPoles) === lastChoice);\r\n\r\n    lastChoice = pole;\r\n    return pole;\r\n}\r\n\r\nfunction chooseNoNeighbourAfterRepeat(nbPoles: number): number {\r\n    let pole: number;\r\n\r\n    const oneRepeatAlready = (lastChoices[0] === lastChoices[1]);\r\n    do {\r\n        pole = chooseAny(nbPoles);\r\n    } while (oneRepeatAlready &&\r\n        (((pole + 1) % nbPoles) === lastChoices[0] || ((pole + nbPoles - 1) % nbPoles) === lastChoices[0]));\r\n\r\n    lastIndex = (lastIndex + 1) % 2;\r\n    lastChoices[lastIndex] = pole;\r\n\r\n    return pole;\r\n}\r\n\r\nfunction chooseNoRightNeighbour(nbPoles: number): number {\r\n    let pole: number;\r\n\r\n    do {\r\n        pole = chooseAny(nbPoles);\r\n    } while (((pole + 1) % nbPoles) === lastChoice);\r\n\r\n    lastChoice = pole;\r\n    return pole;\r\n}\r\n\r\nexport {\r\n    clearHistory,\r\n    getChooseFunction,\r\n\r\n    Restriction,\r\n};\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport default Viewport;\r\n","import DrawingHandlerBase from \"./drawing-handler-base\";\r\nimport DrawingHandlerFixed from \"./drawing-handler-fixed\";\r\nimport DrawingModeMovement from \"./drawing-handler-movement\";\r\nimport DrawingModePreview from \"./drawing-handler-preview\";\r\n\r\nconst fixedMode = new DrawingHandlerFixed();\r\nconst movementMode = new DrawingModeMovement();\r\nconst previewMode = new DrawingModePreview();\r\n\r\nexport {\r\n    DrawingHandlerBase as Base,\r\n    fixedMode as fixed,\r\n    movementMode as movement,\r\n    previewMode as preview,\r\n};\r\n","import * as GLCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\nimport Viewport from \"./gl-utils/viewport\";\r\n\r\nimport Game from \"./chaos-game\";\r\nimport DownloadCanvas from \"./downloader\";\r\nimport { Mode, Parameters, Theme } from \"./parameters\";\r\n\r\nimport * as DrawingHandlers from \"./drawing-handlers/drawing-handlers\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nfunction main() {\r\n    initGL();\r\n\r\n    Page.Canvas.showLoader(true);\r\n\r\n    Parameters.quality = 0.6;\r\n    Parameters.colors = false;\r\n    Parameters.presetFixed = 15;\r\n    Parameters.presetMovement = 0;\r\n\r\n    let needToClearCanvas = true;\r\n    let lockedCanvas = false;\r\n    bindEvents();\r\n\r\n    const game = new Game();\r\n\r\n    let totalPoints: number;\r\n    function setTotalPoints(total: number): void {\r\n        totalPoints = total;\r\n        Page.Canvas.setIndicatorText(\"points-drawn\", totalPoints.toLocaleString());\r\n    }\r\n    setTotalPoints(0);\r\n\r\n    function clearCanvas() {\r\n        GLCanvas.adjustSize();\r\n        Viewport.setFullCanvas(gl);\r\n\r\n        if (Parameters.theme === Theme.LIGHT) {\r\n            gl.clearColor(1, 1, 1, 1);\r\n            gl.blendEquation(gl.FUNC_REVERSE_SUBTRACT);\r\n        } else {\r\n            gl.clearColor(0, 0, 0, 1);\r\n            gl.blendEquation(gl.FUNC_ADD);\r\n        }\r\n\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        setTotalPoints(0);\r\n        needToClearCanvas = false;\r\n    }\r\n\r\n    let drawingHandler: DrawingHandlers.Base;\r\n\r\n    let firstDraw = true;\r\n    function mainLoop() {\r\n        if (!lockedCanvas) {\r\n            if (needToClearCanvas) {\r\n                clearCanvas();\r\n                drawingHandler = (Parameters.mode ===  Mode.FIXED) ? DrawingHandlers.fixed : DrawingHandlers.movement;\r\n                drawingHandler.reset();\r\n            }\r\n\r\n            if (Page.Canvas.isMouseDown()) {\r\n                DrawingHandlers.preview.drawStep(game);\r\n                setTotalPoints(DrawingHandlers.preview.totalPointsDrawn);\r\n                needToClearCanvas = true;\r\n            } else if (game.isReadyToDraw) {\r\n                if (drawingHandler.needsToKeepDrawing) {\r\n                    drawingHandler.drawStep(game);\r\n                    setTotalPoints(drawingHandler.totalPointsDrawn);\r\n                }\r\n\r\n                if (firstDraw) {\r\n                    firstDraw = false;\r\n                    Page.Canvas.showLoader(false);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    requestAnimationFrame(mainLoop);\r\n\r\n    function initGL() {\r\n        const glParams = {\r\n            alpha: false,\r\n            antialias: false,\r\n            depth: false,\r\n            preserveDrawingBuffer: true,\r\n        };\r\n        if (!GLCanvas.initGL(glParams)) {\r\n            return;\r\n        }\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE);\r\n    }\r\n\r\n    function bindEvents() {\r\n        Parameters.clearObservers.push(() => needToClearCanvas = true);\r\n\r\n        Parameters.downloadObservers.push((wantedSize: number) => {\r\n            lockedCanvas = true;\r\n            DownloadCanvas(game, wantedSize);\r\n            lockedCanvas = false;\r\n            needToClearCanvas = true;\r\n        });\r\n    }\r\n}\r\n\r\nmain();\r\n","import { gl } from \"./gl-canvas\";\r\nimport Shader from \"./shader\";\r\nimport * as ShaderSources from \"./shader-sources\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentFilename: string;\r\n    vertexFilename: string;\r\n    injected: { [id: string]: string };\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader;\r\n    infos: IShaderInfos;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader} = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\ntype BuildCallback = (builtShader: Shader | null) => void;\r\n\r\nfunction buildShader(infos: IShaderInfos, callback: BuildCallback) {\r\n    let sourcesPending = 2;\r\n    let sourcesFailed = 0;\r\n\r\n    function loadedSource(success: boolean) {\r\n        function processSource(source: string): string {\r\n            return source.replace(/#INJECT\\((.*)\\)/mg, (match, name) => {\r\n                if (infos.injected[name]) {\r\n                    return infos.injected[name];\r\n                }\r\n                return match;\r\n            });\r\n        }\r\n\r\n        sourcesPending--;\r\n        if (!success) {\r\n            sourcesFailed++;\r\n        }\r\n\r\n        if (sourcesPending === 0) {\r\n            let shader = null;\r\n\r\n            if (sourcesFailed === 0) {\r\n                const vert = ShaderSources.getSource(infos.vertexFilename);\r\n                const frag = ShaderSources.getSource(infos.fragmentFilename);\r\n\r\n                const processedVert = processSource(vert);\r\n                const processedFrag = processSource(frag);\r\n\r\n                shader = new Shader(gl, processedVert, processedFrag);\r\n            }\r\n\r\n            callback(shader);\r\n        }\r\n    }\r\n\r\n    ShaderSources.loadSource(infos.vertexFilename, loadedSource);\r\n    ShaderSources.loadSource(infos.fragmentFilename, loadedSource);\r\n}\r\n\r\nfunction registerShader(name: string, infos: IShaderInfos, callback: RegisterCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedShader) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed, cached.shader);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedShaders[name] === \"undefined\") {\r\n        cachedShaders[name] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            infos,\r\n            pending: true,\r\n            shader: null,\r\n        };\r\n        const cached = cachedShaders[name];\r\n\r\n        buildShader(infos, (builtShader) => {\r\n            cached.pending = false;\r\n            cached.failed = builtShader === null;\r\n            cached.shader = builtShader;\r\n\r\n            callAndClearCallbacks(cached);\r\n        });\r\n    } else {\r\n        const cached = cachedShaders[name];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteShader(name: string) {\r\n    if (cachedShaders[name]) {\r\n        if (cachedShaders[name].shader) {\r\n            cachedShaders[name].shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    registerShader,\r\n    deleteShader,\r\n};\r\n","import GLResource from \"./gl-resource\";\r\nimport VBO from \"./vbo\";\r\n\r\nfunction notImplemented(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1iv(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                       value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                         value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\nconst types = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: IShaderUniform[];\r\n    public a: IShaderAttribute[];\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = [];\r\n        for (let i = 0; i < this.uCount; ++i) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = [];\r\n        for (let i = 0; i < this.aCount; ++i) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShaderProgram;\r\n","type LoadCallback = (success: boolean)  => void;\r\n\r\ninterface ICachedSource {\r\n    text: string;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: LoadCallback[];\r\n}\r\n\r\nconst cachedSources: { [id: string]: ICachedSource } = {};\r\n\r\n/* Fetches asynchronously the shader source from server and stores it in cache. */\r\nfunction loadSource(filename: string, callback: LoadCallback) {\r\n    function callAndClearCallbacks(cached: ICachedSource) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedSources[filename] === \"undefined\") {\r\n        cachedSources[filename] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            pending: true,\r\n            text: null,\r\n        };\r\n        const cached = cachedSources[filename];\r\n\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"./shaders/\" + filename, true);\r\n        xhr.onload = () => {\r\n            if (xhr.readyState === 4) {\r\n                cached.pending = false;\r\n\r\n                if (xhr.status === 200) {\r\n                    cached.text = xhr.responseText;\r\n                    cached.failed = false;\r\n                } else {\r\n                    console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n                    cached.failed = true;\r\n                }\r\n\r\n                callAndClearCallbacks(cached);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n            cached.pending = false;\r\n            cached.failed = true;\r\n            callAndClearCallbacks(cached);\r\n        };\r\n\r\n        xhr.send(null);\r\n    } else {\r\n        const cached = cachedSources[filename];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            cached.callbacks = [callback];\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSource(filename: string): string {\r\n    return cachedSources[filename].text;\r\n}\r\n\r\nexport {\r\n    getSource,\r\n    loadSource,\r\n};\r\n","import GLResource from \"./gl-resource\";\r\n\r\nenum Usage {\r\n    DYNAMIC,\r\n    STATIC,\r\n}\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT, true);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n    private usage: Usage;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum, staticUsage: boolean = true) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (staticUsage) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n        this.usage = (staticUsage) ? Usage.STATIC : Usage.DYNAMIC;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n\r\n    public setData(array: any): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (this.usage === Usage.STATIC) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n}\r\n\r\nexport default VBO;\r\n","/**\r\n * @param hue in [0,1]\r\n * @return vec3 in [0,1]\r\n */\r\nfunction ColorFromHue(hue: number): number [] {\r\n    let r = 0;\r\n    let g = 0;\r\n    let b = 0;\r\n\r\n    hue = (hue %  1) * 6;\r\n\r\n    if (hue < 1) {\r\n        r = 1;\r\n        g = hue;\r\n    } else if (hue < 2) {\r\n        r = 2 - hue;\r\n        g = 1;\r\n    } else if (hue < 3) {\r\n        g = 1;\r\n        b = hue - 2;\r\n    } else if (hue < 4) {\r\n        g = 4 - hue;\r\n        b = 1;\r\n    } else if (hue < 5) {\r\n        r = hue - 4;\r\n        b = 1;\r\n    } else if (hue < 6) {\r\n        r = 1;\r\n        b = 6 - hue;\r\n    }\r\n\r\n    return [r, g, b];\r\n}\r\n\r\nexport default ColorFromHue;\r\n","import { Restriction } from \"./restriction\";\r\n\r\ninterface IPreset {\r\n    poles: number;\r\n    distance: number;\r\n    rotation: number;\r\n    restriction: Restriction;\r\n    scale: number;\r\n    intensity: number;\r\n}\r\n\r\nconst presets: IPreset[] = [];\r\npresets[0] = {\r\n    poles: 3,\r\n    distance: 0.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 1,\r\n    intensity: 0.01,\r\n};\r\npresets[1] = {\r\n    poles: 6,\r\n    distance: 0.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 0.75,\r\n    intensity: 0.03,\r\n};\r\npresets[2] = {\r\n    poles: 3,\r\n    distance: 1.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 3,\r\n    intensity: 0.08,\r\n};\r\npresets[3] = {\r\n    poles: 5,\r\n    distance: 0.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 1,\r\n    intensity: 0.03,\r\n};\r\npresets[4] = {\r\n    poles: 4,\r\n    distance: 0.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 0.8,\r\n    intensity: 0.01,\r\n};\r\npresets[5] = {\r\n    poles: 4,\r\n    distance: 0.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_NEIGHBOUR_AFTER_REPEAT,\r\n    scale: 0.8,\r\n    intensity: 0.02,\r\n};\r\npresets[6] = {\r\n    poles: 4,\r\n    distance: 1.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 2.5,\r\n    intensity: 0.07,\r\n};\r\npresets[7] = {\r\n    poles: 6,\r\n    distance: 0.57,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 1.2,\r\n    intensity: 0.03,\r\n};\r\npresets[8] = {\r\n    poles: 6,\r\n    distance: 1.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 2,\r\n    intensity: 0.2,\r\n};\r\npresets[9] = {\r\n    poles: 4,\r\n    distance: 0.4,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 0.8,\r\n    intensity: 0.01,\r\n};\r\npresets[10] = {\r\n    poles: 4,\r\n    distance: 1.618,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 3,\r\n    intensity: 0.4,\r\n};\r\npresets[11] = {\r\n    poles: 5,\r\n    distance: 1.618,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 4,\r\n    intensity: 0.3,\r\n};\r\npresets[12] = {\r\n    poles: 3,\r\n    distance: 1.618,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 4,\r\n    intensity: 0.15,\r\n};\r\npresets[13] = {\r\n    poles: 4,\r\n    distance: 1.618,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 4,\r\n    intensity: 0.4,\r\n};\r\npresets[14] = {\r\n    poles: 6,\r\n    distance: 0.667,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 0.65,\r\n    intensity: 0.02,\r\n};\r\npresets[15] = {\r\n    poles: 5,\r\n    distance: 1.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_NEIGHBOUR_AFTER_REPEAT,\r\n    scale: 3,\r\n    intensity: 0.16,\r\n};\r\npresets[16] = {\r\n    poles: 5,\r\n    distance: 1.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_NEIGHBOUR,\r\n    scale: 3,\r\n    intensity: 0.07,\r\n};\r\npresets[17] = {\r\n    poles: 7,\r\n    distance: 1.445,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_DOUBLE_REPEAT,\r\n    scale: 1.5,\r\n    intensity: 0.2,\r\n};\r\npresets[18] = {\r\n    poles: 4,\r\n    distance: 0.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_DOUBLE_REPEAT,\r\n    scale: 0.75,\r\n    intensity: 0.03,\r\n};\r\npresets[19] = {\r\n    poles: 3,\r\n    distance: 0.386,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_RIGHT_NEIGHBOUR,\r\n    scale: 1,\r\n    intensity: 0.03,\r\n};\r\npresets[20] = {\r\n    poles: 3,\r\n    distance: 1.755,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 4,\r\n    intensity: 1,\r\n};\r\npresets[21] = {\r\n    poles: 3,\r\n    distance: 1.647,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_RIGHT_NEIGHBOUR,\r\n    scale: 1,\r\n    intensity: 0.05,\r\n};\r\n\r\nfunction getPreset(id: number): IPreset {\r\n    return presets[id];\r\n}\r\n\r\nexport {\r\n    getPreset,\r\n    IPreset,\r\n};\r\n","import { Restriction } from \"./restriction\";\r\n\r\ninterface IPreset {\r\n    poles: number;\r\n    distanceFrom: number;\r\n    distanceTo: number;\r\n    rotation: number;\r\n    restriction: Restriction;\r\n    scale: number;\r\n    intensity: number;\r\n}\r\n\r\nconst presets: IPreset[] = [];\r\npresets[0] = {\r\n    poles: 3,\r\n    distanceFrom: 1,\r\n    distanceTo: 1.6,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 3,\r\n    intensity: 0.1,\r\n};\r\npresets[1] = {\r\n    poles: 5,\r\n    distanceFrom: 0.5,\r\n    distanceTo: 1,\r\n    rotation: 0,\r\n    restriction: Restriction.NONE,\r\n    scale: 1,\r\n    intensity: 0.1,\r\n};\r\npresets[2] = {\r\n    poles: 6,\r\n    distanceFrom: 1,\r\n    distanceTo: 1.5,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_REPEAT,\r\n    scale: 2.5,\r\n    intensity: 0.1,\r\n};\r\npresets[3] = {\r\n    poles: 3,\r\n    distanceFrom: 1,\r\n    distanceTo: 1.7,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_RIGHT_NEIGHBOUR,\r\n    scale: 3,\r\n    intensity: 0.175,\r\n};\r\npresets[4] = {\r\n    poles: 5,\r\n    distanceFrom: 0.265,\r\n    distanceTo: 1.65,\r\n    rotation: 0,\r\n    restriction: Restriction.NO_NEIGHBOUR,\r\n    scale: 3,\r\n    intensity: 0.25,\r\n};\r\n\r\nfunction getPreset(id: number): IPreset {\r\n    return presets[id];\r\n}\r\n\r\nexport {\r\n    getPreset,\r\n    IPreset,\r\n};\r\n","import * as GLCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\nimport Viewport from \"./gl-utils/viewport\";\r\n\r\nimport Game from \"./chaos-game\";\r\nimport * as DrawingHandlers from \"./drawing-handlers/drawing-handlers\";\r\nimport { Mode, Parameters } from \"./parameters\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nfunction downloadCanvas(game: Game, size: number): void {\r\n    const canvas = Page.Canvas.getCanvas() as HTMLCanvasElement;\r\n    const handler = (Parameters.mode === Mode.FIXED) ? DrawingHandlers.fixed : DrawingHandlers.movement;\r\n\r\n    const nbPointsNeeded = handler.computeTotalPointsNeeded([size, size]);\r\n    if (nbPointsNeeded > 50000000) {\r\n        const message = \"Rendering your image might take a while \" +\r\n            \"because it requires to draw \" + nbPointsNeeded.toLocaleString() + \" points. \" +\r\n            \"Do you want to proceed?\";\r\n        if (!confirm(message)) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    function manuallyTriggerCanvasResizeEvent() {\r\n        const canvasSize = Page.Canvas.getSize();\r\n        for (const func of Page.Canvas.Observers.canvasResize) {\r\n            func(canvasSize[0], canvasSize[1]);\r\n        }\r\n    }\r\n\r\n    function isolateCanvas() {\r\n        Page.Canvas.showLoader(true);\r\n\r\n        canvas.style.position = \"absolute\";\r\n        canvas.style.width = size + \"px\";\r\n        canvas.style.height = size + \"px\";\r\n        canvas.width = size;\r\n        canvas.height = size;\r\n\r\n        manuallyTriggerCanvasResizeEvent();\r\n        GLCanvas.adjustSize();\r\n        Viewport.setFullCanvas(gl);\r\n    }\r\n\r\n    function restoreCanvas() {\r\n        canvas.style.position = \"\";\r\n        canvas.style.width = \"\";\r\n        canvas.style.height = \"\";\r\n        Page.Canvas.showLoader(false);\r\n        Page.Canvas.setLoaderText(\"\");\r\n        manuallyTriggerCanvasResizeEvent();\r\n    }\r\n\r\n    isolateCanvas();\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n    handler.reset();\r\n    while (handler.needsToKeepDrawing) {\r\n        handler.drawStep(game);\r\n    }\r\n\r\n    const downloadedName = \"chaos-game.png\";\r\n    if ((canvas as any).msToBlob) { // for IE\r\n        const blob = (canvas as any).msToBlob();\r\n        window.navigator.msSaveBlob(blob, downloadedName);\r\n\r\n        restoreCanvas();\r\n    } else {\r\n        canvas.toBlob((blob) => {\r\n            const link = document.createElement(\"a\");\r\n            link.download = downloadedName;\r\n            link.href = URL.createObjectURL(blob);\r\n            link.click();\r\n\r\n            restoreCanvas();\r\n        });\r\n    }\r\n}\r\n\r\nexport default downloadCanvas;\r\n","import ChaosGame from \"../chaos-game\";\r\nimport { Parameters } from \"../parameters\";\r\nimport DrawingHandlerBase from \"./drawing-handler-base\";\r\n\r\nclass DrawingHandlerFixed extends DrawingHandlerBase {\r\n    private _totalPointsDrawn: number;\r\n\r\n    public reset(): void {\r\n        this._totalPointsDrawn = 0;\r\n    }\r\n\r\n    public drawStep(game: ChaosGame): void {\r\n        const nbPointsToDraw = this.nbPointsNeeded - this._totalPointsDrawn;\r\n        const nbPoints = Math.min(ChaosGame.MAX_POINTS_PER_STEP, nbPointsToDraw);\r\n        game.draw(nbPoints, Parameters.distance, Parameters.quality);\r\n\r\n        this._totalPointsDrawn += nbPoints;\r\n    }\r\n\r\n    public get needsToKeepDrawing(): boolean {\r\n        return this._totalPointsDrawn < this.nbPointsNeeded;\r\n    }\r\n\r\n    public get totalPointsDrawn(): number {\r\n        return this._totalPointsDrawn;\r\n    }\r\n\r\n    public computeTotalPointsNeeded(canvasSize: number[]): number {\r\n        const sizeFactor = Parameters.computeSizeFactor(canvasSize);\r\n        return DrawingHandlerFixed.computeTotalPointsNeededInternal(sizeFactor);\r\n    }\r\n\r\n    private  static computeTotalPointsNeededInternal(sizeFactor: number): number {\r\n        const exactValue = 2000 * Parameters.nbPointsNeeded * sizeFactor * sizeFactor;\r\n        return Math.ceil(exactValue);\r\n    }\r\n\r\n    private get nbPointsNeeded(): number {\r\n        const sizeFactor = Parameters.sizeFactor;\r\n        return DrawingHandlerFixed.computeTotalPointsNeededInternal(sizeFactor);\r\n    }\r\n}\r\n\r\nexport default DrawingHandlerFixed;\r\n","import ChaosGame from \"../chaos-game\";\r\nimport { Parameters } from \"../parameters\";\r\nimport DrawingHandlerBase from \"./drawing-handler-base\";\r\n\r\nclass DrawingModeMovement extends DrawingHandlerBase {\r\n    private _totalPointsDrawn: number;\r\n    private _distance: number;\r\n\r\n    private _pointsNeededPerDistanceUnit: number;\r\n    private _distanceGap: number;\r\n    private _distancePerStep: number;\r\n\r\n    public reset(): void {\r\n        this._totalPointsDrawn = 0;\r\n        this._distance = Parameters.distanceFrom;\r\n        this._pointsNeededPerDistanceUnit = DrawingModeMovement.computePointsPerDistanceUnit(Parameters.sizeFactor);\r\n        this._distanceGap = 0.4 / Parameters.sizeFactor;\r\n\r\n        const minTotalSteps = 180;\r\n        const totalDistance = Parameters.distanceTo - Parameters.distanceFrom;\r\n        const maxDistancePerStep = totalDistance / minTotalSteps;\r\n        const potentialMaxPointsPerStep = maxDistancePerStep * this._pointsNeededPerDistanceUnit;\r\n\r\n        this._distancePerStep = maxDistancePerStep;\r\n        if (potentialMaxPointsPerStep > ChaosGame.MAX_POINTS_PER_STEP) {\r\n            this._distancePerStep *= ChaosGame.MAX_POINTS_PER_STEP / potentialMaxPointsPerStep;\r\n        }\r\n    }\r\n\r\n    public drawStep(game: ChaosGame): void {\r\n        const finalDistanceAfterThisStep = Math.min(this._distance + this._distancePerStep, Parameters.distanceTo);\r\n\r\n        while (this._distance + this._distanceGap < finalDistanceAfterThisStep) {\r\n            this.drawDistanceGap(game, this._distanceGap);\r\n        }\r\n\r\n        if (this._distance < finalDistanceAfterThisStep) {\r\n            this.drawDistanceGap(game, finalDistanceAfterThisStep - this._distance);\r\n        }\r\n    }\r\n\r\n    public get needsToKeepDrawing(): boolean {\r\n        return this._distance < Parameters.distanceTo;\r\n    }\r\n\r\n    public get totalPointsDrawn(): number {\r\n        return this._totalPointsDrawn;\r\n    }\r\n\r\n    public computeTotalPointsNeeded(canvasSize: number[]): number {\r\n        const sizeFactor = Parameters.computeSizeFactor(canvasSize);\r\n        const pointsPerDistanceUnit = DrawingModeMovement.computePointsPerDistanceUnit(sizeFactor);\r\n        const totalDistance = Parameters.distanceTo - Parameters.distanceFrom;\r\n        return Math.ceil(pointsPerDistanceUnit * totalDistance);\r\n    }\r\n\r\n    private static computePointsPerDistanceUnit(sizeFactor: number): number {\r\n        return Math.ceil(2000 * Parameters.nbPointsNeeded * sizeFactor * sizeFactor);\r\n    }\r\n\r\n    private drawDistanceGap(game: ChaosGame, distanceGap: number): void {\r\n        const nbPoints = Math.ceil(distanceGap * this._pointsNeededPerDistanceUnit);\r\n        game.draw(nbPoints, this._distance, Parameters.quality);\r\n        this._totalPointsDrawn += nbPoints;\r\n        this._distance += distanceGap;\r\n    }\r\n}\r\n\r\nexport default DrawingModeMovement;\r\n","import ChaosGame from \"../chaos-game\";\r\nimport { Parameters } from \"../parameters\";\r\nimport DrawingHandlerBase from \"./drawing-handler-base\";\r\n\r\nconst quality = 0;\r\nconst nbPointsNeeded = Math.pow(2, 17);\r\n\r\nclass DrawingHandlerPreview extends DrawingHandlerBase {\r\n    /* tslint:disable:no-empty */\r\n    public reset(): void {}\r\n    /* tslint:enable:no-empty */\r\n\r\n    public drawStep(game: ChaosGame): void {\r\n        game.draw(nbPointsNeeded, Parameters.distance, quality);\r\n    }\r\n\r\n    public get needsToKeepDrawing(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public get totalPointsDrawn(): number {\r\n        return nbPointsNeeded;\r\n    }\r\n\r\n    public computeTotalPointsNeeded(canvasSize: number[]): number {\r\n        return nbPointsNeeded;\r\n    }\r\n}\r\n\r\nexport default DrawingHandlerPreview;\r\n"],"sourceRoot":""}